From d8013073c8fd891c1b8086e14e908b8a66f86a39 Mon Sep 17 00:00:00 2001
From: Viktoria Maksimova <viktoria.maksimova@intel.com>
Date: Thu, 20 Sep 2018 11:08:32 +0300
Subject: [PATCH 4/9] Fix memory leak at adding execution mode

---
 lib/SPIRV/SPIRVWriter.cpp         | 12 ++++++------
 lib/SPIRV/libSPIRV/SPIRVEntry.cpp |  2 +-
 2 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/lib/SPIRV/SPIRVWriter.cpp b/lib/SPIRV/SPIRVWriter.cpp
index eaae2c8..08849fd 100644
--- a/lib/SPIRV/SPIRVWriter.cpp
+++ b/lib/SPIRV/SPIRVWriter.cpp
@@ -1555,23 +1555,23 @@ bool LLVMToSPIRV::transExecutionMode() {
       case spv::ExecutionModeContractionOff:
       case spv::ExecutionModeInitializer:
       case spv::ExecutionModeFinalizer:
-        BF->addExecutionMode(
-            new SPIRVExecutionMode(BF, static_cast<ExecutionMode>(EMode)));
+        BF->addExecutionMode(BM->add(
+            new SPIRVExecutionMode(BF, static_cast<ExecutionMode>(EMode))));
         break;
       case spv::ExecutionModeLocalSize:
       case spv::ExecutionModeLocalSizeHint: {
         unsigned X, Y, Z;
         N.get(X).get(Y).get(Z);
-        BF->addExecutionMode(new SPIRVExecutionMode(
-            BF, static_cast<ExecutionMode>(EMode), X, Y, Z));
+        BF->addExecutionMode(BM->add(new SPIRVExecutionMode(
+            BF, static_cast<ExecutionMode>(EMode), X, Y, Z)));
       } break;
       case spv::ExecutionModeVecTypeHint:
       case spv::ExecutionModeSubgroupSize:
       case spv::ExecutionModeSubgroupsPerWorkgroup: {
         unsigned X;
         N.get(X);
-        BF->addExecutionMode(
-            new SPIRVExecutionMode(BF, static_cast<ExecutionMode>(EMode), X));
+        BF->addExecutionMode(BM->add(
+            new SPIRVExecutionMode(BF, static_cast<ExecutionMode>(EMode), X)));
       } break;
       default:
         llvm_unreachable("invalid execution mode");
diff --git a/lib/SPIRV/libSPIRV/SPIRVEntry.cpp b/lib/SPIRV/libSPIRV/SPIRVEntry.cpp
index e4e9736..fa7ae69 100644
--- a/lib/SPIRV/libSPIRV/SPIRVEntry.cpp
+++ b/lib/SPIRV/libSPIRV/SPIRVEntry.cpp
@@ -417,7 +417,7 @@ void SPIRVExecutionMode::decode(std::istream &I) {
     break;
   }
   getDecoder(I) >> WordLiterals;
-  getOrCreateTarget()->addExecutionMode(this);
+  getOrCreateTarget()->addExecutionMode(Module->add(this));
 }
 
 SPIRVForward *SPIRVAnnotationGeneric::getOrCreateTarget() const {
-- 
1.8.3.1

