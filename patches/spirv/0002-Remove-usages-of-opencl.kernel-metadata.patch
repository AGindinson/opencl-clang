From 0e58e00ef79351aa2c5f359a9be87058677979a9 Mon Sep 17 00:00:00 2001
From: Kristina Bessonova <kristina.bessonova@intel.com>
Date: Thu, 5 Apr 2018 15:53:18 +0300
Subject: [PATCH 2/9] Remove usages of opencl.kernel metadata

---
 lib/SPIRV/SPIRVInternal.h                          |  1 -
 lib/SPIRV/SPIRVWriter.cpp                          | 21 ++-------
 test/EnqueueEmptyKernel.ll                         | 14 ++++--
 test/FOrdGreaterThanEqual_bool.ll                  | 16 +++----
 test/FOrdGreaterThanEqual_int.ll                   | 14 +++---
 test/OpLine.ll                                     |  9 +---
 test/OpSwitch32.ll                                 | 14 +++---
 test/OpSwitch64.ll                                 | 14 +++---
 test/SamplerArgNonKernel.ll                        | 14 +++---
 test/builtin_vars-decorate.ll                      | 10 +---
 test/capbility-kernel.ll                           | 14 +++---
 test/empty.ll                                      | 14 +++---
 test/fmod.ll                                       | 16 +++----
 test/group-decorate.ll                             |  2 -
 test/half_no_extension.ll                          | 18 ++++----
 test/image-unoptimized.ll                          | 14 +++---
 test/image.ll                                      |  2 -
 test/image_decl_func_arg.ll                        | 14 +++---
 test/image_dim.ll                                  | 14 +++---
 test/layout.ll                                     | 13 +++---
 test/lifetime.ll                                   | 14 +++---
 test/link-attribute.ll                             | 15 +++---
 test/linkage-types.ll                              | 27 ++++-------
 test/linked-list.ll                                | 14 +++---
 test/memory_access.ll                              | 14 +++---
 test/multi_md.ll                                   | 27 +++++------
 test/no_capability_shader.ll                       | 14 +++---
 test/select.ll                                     | 16 +++----
 test/simple.ll                                     | 27 +++++------
 test/store.ll                                      | 14 +++---
 .../AtomicCompareExchangeExplicit_cl20.ll          | 14 +++---
 test/transcoding/BuildNDRange.ll                   | 29 ++++--------
 test/transcoding/OpAllAny.ll                       | 27 ++++-------
 test/transcoding/OpConstantBool.ll                 | 14 +++---
 test/transcoding/OpConstantSampler.ll              | 45 +++++++-----------
 test/transcoding/OpControlBarrier_cl12.ll          | 25 ++++------
 test/transcoding/OpControlBarrier_cl20.ll          | 27 ++++-------
 test/transcoding/OpControlBarrier_cl20_subgroup.ll |  7 ---
 test/transcoding/OpControlBarrier_cl21.ll          | 27 ++++-------
 test/transcoding/OpDot.ll                          | 14 +++---
 test/transcoding/OpGenericPtrMemSemantics.ll       | 14 +++---
 test/transcoding/OpGroupAllAny.ll                  | 14 +++---
 test/transcoding/OpGroupAsyncCopy.ll               | 14 +++---
 test/transcoding/OpImageQuerySize.ll               | 53 ++++++++++------------
 test/transcoding/OpImageReadMS.ll                  | 14 +++---
 test/transcoding/OpImageSampleExplicitLod.ll       | 14 +++---
 test/transcoding/OpImageSampleExplicitLod_arg.ll   | 14 +++---
 test/transcoding/OpMemoryBarrier_cl12.ll           | 27 ++++-------
 test/transcoding/OpMemoryBarrier_cl20.ll           | 29 ++++--------
 test/transcoding/OpMin.ll                          | 27 ++++-------
 test/transcoding/OpPhi_ArgumentsPlaceholders.ll    | 16 +++----
 test/transcoding/OpVariable_Initializer.ll         | 15 ++----
 test/transcoding/RecursiveType.ll                  | 16 +++----
 test/transcoding/atomics_1.2.ll                    | 20 ++++----
 test/transcoding/bitcast.ll                        | 14 +++---
 test/transcoding/check_ro_qualifier.ll             | 14 +++---
 test/transcoding/check_wo_qualifier.ll             | 14 +++---
 test/transcoding/cl-types.ll                       |  2 -
 test/transcoding/cl_intel_sub_groups.ll            | 14 +++---
 test/transcoding/fclamp.ll                         | 14 +++---
 test/transcoding/image_channel.ll                  | 16 +++----
 .../image_get_size_with_access_qualifiers.ll       | 14 +++---
 test/transcoding/isequal.ll                        | 14 +++---
 test/transcoding/llvm.memmove.ll                   | 17 +++----
 .../transcoding/optional-core-features-multiple.ll | 18 ++++----
 test/transcoding/relationals.ll                    | 21 ++++-----
 test/transcoding/relationals_double.ll             | 14 +++---
 test/transcoding/relationals_half.ll               | 21 ++++-----
 test/transcoding/spirv-types.ll                    | 14 +++---
 test/transcoding/vec8.ll                           | 16 +++----
 test/transcoding/vector_casts.ll                   | 14 +++---
 test/unreachable.ll                                | 14 +++---
 72 files changed, 484 insertions(+), 727 deletions(-)

diff --git a/lib/SPIRV/SPIRVInternal.h b/lib/SPIRV/SPIRVInternal.h
index c3f2e74..d5260b5 100644
--- a/lib/SPIRV/SPIRVInternal.h
+++ b/lib/SPIRV/SPIRVInternal.h
@@ -248,7 +248,6 @@ SPIRVMap<SPIRVExtInstSetKind, std::string, SPIRVExtSetShortName>::init() {
 typedef SPIRVMap<SPIRVExtInstSetKind, std::string, SPIRVExtSetShortName>
     SPIRVExtSetShortNameMap;
 
-#define SPIR_MD_KERNELS "opencl.kernels"
 #define SPIR_MD_COMPILER_OPTIONS "opencl.compiler.options"
 #define SPIR_MD_KERNEL_ARG_ADDR_SPACE "kernel_arg_addr_space"
 #define SPIR_MD_KERNEL_ARG_ACCESS_QUAL "kernel_arg_access_qual"
diff --git a/lib/SPIRV/SPIRVWriter.cpp b/lib/SPIRV/SPIRVWriter.cpp
index 304de2e..eaae2c8 100644
--- a/lib/SPIRV/SPIRVWriter.cpp
+++ b/lib/SPIRV/SPIRVWriter.cpp
@@ -1582,25 +1582,14 @@ bool LLVMToSPIRV::transExecutionMode() {
 }
 
 bool LLVMToSPIRV::transOCLKernelMetadata() {
-  NamedMDNode *KernelMDs = M->getNamedMetadata(SPIR_MD_KERNELS);
-  std::vector<std::string> ArgAccessQual;
-  if (!KernelMDs)
-    return true;
-
-  for (unsigned I = 0, E = KernelMDs->getNumOperands(); I < E; ++I) {
-    MDNode *KernelMD = KernelMDs->getOperand(I);
-    if (KernelMD->getNumOperands() == 0)
+  for (auto &F : *M) {
+    if (F.getCallingConv() != CallingConv::SPIR_KERNEL)
       continue;
-    Function *Kernel = mdconst::dyn_extract<Function>(KernelMD->getOperand(0));
 
-    SPIRVFunction *BF =
-        static_cast<SPIRVFunction *>(getTranslatedValue(Kernel));
+    SPIRVFunction *BF = static_cast<SPIRVFunction *>(getTranslatedValue(&F));
     assert(BF && "Kernel function should be translated first");
-    assert(Kernel && oclIsKernel(Kernel) &&
-           "Invalid kernel calling convention or metadata");
 
-    if (auto *KernelArgTypeQual =
-            Kernel->getMetadata(SPIR_MD_KERNEL_ARG_TYPE_QUAL)) {
+    if (auto *KernelArgTypeQual = F.getMetadata(SPIR_MD_KERNEL_ARG_TYPE_QUAL)) {
       foreachKernelArgMD(
           KernelArgTypeQual, BF,
           [](const std::string &Str, SPIRVFunctionParameter *BA) {
@@ -1616,7 +1605,7 @@ bool LLVMToSPIRV::transOCLKernelMetadata() {
                                     FunctionParameterAttributeNoWrite));
           });
     }
-    if (auto *KernelArgName = Kernel->getMetadata(SPIR_MD_KERNEL_ARG_NAME)) {
+    if (auto *KernelArgName = F.getMetadata(SPIR_MD_KERNEL_ARG_NAME)) {
       foreachKernelArgMD(
           KernelArgName, BF,
           [=](const std::string &Str, SPIRVFunctionParameter *BA) {
diff --git a/test/EnqueueEmptyKernel.ll b/test/EnqueueEmptyKernel.ll
index 744afb2..afd3528 100644
--- a/test/EnqueueEmptyKernel.ll
+++ b/test/EnqueueEmptyKernel.ll
@@ -32,7 +32,7 @@ target triple = "spir64-unknown-unknown"
 ; CHECK-SPIRV: Variable {{[0-9]+}} [[Block:[0-9]+]]
 
 ; Function Attrs: convergent nounwind
-define spir_kernel void @test_enqueue_empty() #0 !kernel_arg_addr_space !2 !kernel_arg_access_qual !2 !kernel_arg_type !2 !kernel_arg_base_type !2 !kernel_arg_type_qual !2 {
+define spir_kernel void @test_enqueue_empty() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
 entry:
   %tmp = alloca %struct.ndrange_t, align 8
   %call = call spir_func %opencl.queue_t* @_Z17get_default_queuev() #4
@@ -78,8 +78,12 @@ attributes #3 = { nounwind }
 attributes #4 = { convergent }
 
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.ocl.version = !{!0}
-!opencl.spir.version = !{!0}
+!opencl.spir.version = !{!1}
+!opencl.ocl.version = !{!2}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
+!opencl.compiler.options = !{!0}
 
-!0 = !{i32 2, i32 0}
-!2 = !{}
+!0 = !{}
+!1 = !{i32 1, i32 2}
+!2 = !{i32 2, i32 0}
diff --git a/test/FOrdGreaterThanEqual_bool.ll b/test/FOrdGreaterThanEqual_bool.ll
index b635d3a..6d79cfb 100644
--- a/test/FOrdGreaterThanEqual_bool.ll
+++ b/test/FOrdGreaterThanEqual_bool.ll
@@ -12,7 +12,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(float %op1, float %op2) #0 {
+define spir_kernel void @test(float %op1, float %op2) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %0 = call spir_func zeroext i1 @_Z28__spirv_FOrdGreaterThanEqualff(float %op1, float %op2) #2
   ret void
@@ -25,7 +25,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -34,13 +33,12 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!9}
 
-!0 = !{void (float, float)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 0, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"float", !"float"}
-!4 = !{!"kernel_arg_base_type", !"float", !"float"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
+!1 = !{i32 0, i32 0}
+!2 = !{!"none", !"none"}
+!3 = !{!"float", !"float"}
+!4 = !{!"float", !"float"}
+!5 = !{!"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
-!9 = !{!"clang version 3.6.1"}
\ No newline at end of file
+!9 = !{!"clang version 3.6.1"}
diff --git a/test/FOrdGreaterThanEqual_int.ll b/test/FOrdGreaterThanEqual_int.ll
index 2f05645..ebd94f5 100644
--- a/test/FOrdGreaterThanEqual_int.ll
+++ b/test/FOrdGreaterThanEqual_int.ll
@@ -12,7 +12,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(float %op1, float %op2) #0 {
+define spir_kernel void @test(float %op1, float %op2) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = call spir_func i32 @_Z14isgreaterequalff(float %op1, float %op2) #2
   ret void
@@ -25,7 +25,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -34,12 +33,11 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!9}
 
-!0 = !{void (float, float)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 0, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"float", !"float"}
-!4 = !{!"kernel_arg_base_type", !"float", !"float"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
+!1 = !{i32 0, i32 0}
+!2 = !{!"none", !"none"}
+!3 = !{!"float", !"float"}
+!4 = !{!"float", !"float"}
+!5 = !{!"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/OpLine.ll b/test/OpLine.ll
index bd5ed53..166a18c 100644
--- a/test/OpLine.ll
+++ b/test/OpLine.ll
@@ -29,7 +29,7 @@ target triple = "spir64"
 ; CHECK-SPIRV: 4 Line [[str]] 1 0
 ; CHECK-SPIRV-NEXT: Function
 ; Function Attrs: nounwind
-define spir_kernel void @foo() #0 {
+define spir_kernel void @foo() #0 !kernel_arg_addr_space !2 !kernel_arg_access_qual !2 !kernel_arg_type !2 !kernel_arg_base_type !2 !kernel_arg_type_qual !2 {
 entry:
 ; CHECK-LLVM: ret void, !dbg ![[Line_1:[0-9]+]]
 ret void, !dbg !23
@@ -131,7 +131,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone }
 
 !llvm.dbg.cu = !{!0}
-!opencl.kernels = !{!13}
 !llvm.module.flags = !{!19, !20}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!21}
@@ -154,12 +153,6 @@ attributes #1 = { nounwind readnone }
 !10 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !11, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
 !11 = !{!12, !12}
 !12 = !{!"0x24\00int\000\0032\0032\000\000\005", null, null} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
-!13 = !{void ()* @foo, !14, !15, !16, !17, !18}
-!14 = !{!"kernel_arg_addr_space"}
-!15 = !{!"kernel_arg_access_qual"}
-!16 = !{!"kernel_arg_type"}
-!17 = !{!"kernel_arg_base_type"}
-!18 = !{!"kernel_arg_type_qual"}
 !19 = !{i32 2, !"Dwarf Version", i32 4}
 !20 = !{i32 2, !"Debug Info Version", i32 2}
 !21 = !{i32 1, i32 2}
diff --git a/test/OpSwitch32.ll b/test/OpSwitch32.ll
index 2326ca6..a70552e 100644
--- a/test/OpSwitch32.ll
+++ b/test/OpSwitch32.ll
@@ -34,7 +34,7 @@ target triple = "spir64-unknown-unknown"
 ;CHECK-LLVM: i32 1, label %sw.bb1
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_32(i32 addrspace(1)* %res) #0 {
+define spir_kernel void @test_32(i32 addrspace(1)* %res) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %res.addr = alloca i32 addrspace(1)*, align 8
   %tid = alloca i32, align 4
@@ -81,7 +81,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -90,12 +89,11 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!9}
 
-!0 = !{void (i32 addrspace(1)*)* @test_32, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int*"}
-!4 = !{!"kernel_arg_base_type", !"int*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int*"}
+!4 = !{!"int*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/OpSwitch64.ll b/test/OpSwitch64.ll
index bd60e54..6c4c69e 100644
--- a/test/OpSwitch64.ll
+++ b/test/OpSwitch64.ll
@@ -38,7 +38,7 @@ target triple = "spir64-unknown-unknown"
 ;CHECK-LLVM: i64 21474836481, label %sw.bb3
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_64(i32 addrspace(1)* %res) #0 {
+define spir_kernel void @test_64(i32 addrspace(1)* %res) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2  !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %res.addr = alloca i32 addrspace(1)*, align 8
   %tid = alloca i64, align 8
@@ -92,7 +92,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -101,12 +100,11 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!9}
 
-!0 = !{void (i32 addrspace(1)*)* @test_64, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int*"}
-!4 = !{!"kernel_arg_base_type", !"int*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int*"}
+!4 = !{!"int*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/SamplerArgNonKernel.ll b/test/SamplerArgNonKernel.ll
index 4d5ff78..2178718 100644
--- a/test/SamplerArgNonKernel.ll
+++ b/test/SamplerArgNonKernel.ll
@@ -30,7 +30,7 @@ entry:
 declare spir_func <4 x i32> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_i(%opencl.image2d_t addrspace(1)*, i32, <2 x i32>) #1
 
 ; Function Attrs: nounwind
-define spir_kernel void @test2(%opencl.image2d_t addrspace(1)* %Img, float addrspace(1)* %result) #0 {
+define spir_kernel void @test2(%opencl.image2d_t addrspace(1)* %Img, float addrspace(1)* %result) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 ;CHECK: Function  {{[0-9]+}} [[KernelId]]
 entry:
   %call = call spir_func float @test(%opencl.image2d_t addrspace(1)* %Img, i32 0)
@@ -44,7 +44,6 @@ entry:
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -52,12 +51,11 @@ attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "
 !opencl.used.optional.core.features = !{!9}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (%opencl.image2d_t addrspace(1)*, float addrspace(1)*)* @test2, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"none"}
-!3 = !{!"kernel_arg_type", !"image2d_t", !"float*"}
-!4 = !{!"kernel_arg_base_type", !"image2d_t", !"float*"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
+!1 = !{i32 1, i32 1}
+!2 = !{!"read_only", !"none"}
+!3 = !{!"image2d_t", !"float*"}
+!4 = !{!"image2d_t", !"float*"}
+!5 = !{!"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/builtin_vars-decorate.ll b/test/builtin_vars-decorate.ll
index d3ede33..29e0852 100644
--- a/test/builtin_vars-decorate.ll
+++ b/test/builtin_vars-decorate.ll
@@ -59,7 +59,7 @@ target triple = "spir-unknown-unknown"
 @__spirv_BuiltInSubgroupLocalInvocationId = external addrspace(1) global i32
 
 ; Function Attrs: nounwind readnone
-define spir_kernel void @_Z1wv() #1 {
+define spir_kernel void @_Z1wv() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
 entry:
   ret void
 }
@@ -67,7 +67,6 @@ entry:
 attributes #0 = { alwaysinline nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -78,12 +77,7 @@ attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-point
 !spirv.Source = !{!10}
 !spirv.String = !{!11}
 
-!0 = !{void ()* @_Z1wv, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
+!0 = !{}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 1}
 !8 = !{}
diff --git a/test/capbility-kernel.ll b/test/capbility-kernel.ll
index f0d7ef9..97fae78 100644
--- a/test/capbility-kernel.ll
+++ b/test/capbility-kernel.ll
@@ -31,7 +31,7 @@ declare spir_func i64 @_Z13get_global_idj(i32) #1
 ; CHECK-NOT: {{[0-9]*}} Capability Shader
 ; CHECK-NOT: {{[0-9]*}} Capability Float64
 ; Function Attrs: nounwind
-define spir_kernel void @func_kernel(i32 addrspace(1)* %a) #0 {
+define spir_kernel void @func_kernel(i32 addrspace(1)* %a) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
 entry:
   tail call spir_func void @func_import(i32 addrspace(1)* %a) #4
   ret void
@@ -45,7 +45,6 @@ attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "
 attributes #3 = { nounwind readnone }
 attributes #4 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -54,12 +53,11 @@ attributes #4 = { nounwind }
 !opencl.compiler.options = !{!7}
 !llvm.ident = !{!8}
 
-!0 = !{void (i32 addrspace(1)*)* @func_kernel, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int*"}
-!4 = !{!"kernel_arg_type_qual", !""}
-!5 = !{!"kernel_arg_base_type", !"int*"}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int*"}
+!4 = !{!""}
+!5 = !{!"int*"}
 !6 = !{i32 2, i32 0}
 !7 = !{}
 !8 = !{!"clang version 3.4 "}
diff --git a/test/empty.ll b/test/empty.ll
index 8df407e..e780f40 100644
--- a/test/empty.ll
+++ b/test/empty.ll
@@ -6,7 +6,7 @@ target triple = "spir-unknown-unknown"
 ; Function Attrs: nounwind
 ; CHECK: Capability Addresses
 ; CHECK: "foo"
-define spir_kernel void @foo(i32 addrspace(1)* %a) #0 {
+define spir_kernel void @foo(i32 addrspace(1)* %a) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %a.addr = alloca i32 addrspace(1)*, align 4
   store i32 addrspace(1)* %a, i32 addrspace(1)** %a.addr, align 4
@@ -15,7 +15,6 @@ entry:
 
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -23,11 +22,10 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 !opencl.used.optional.core.features = !{!7}
 !opencl.compiler.options = !{!7}
 
-!0 = !{void (i32 addrspace(1)*)* @foo, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int*"}
-!4 = !{!"kernel_arg_base_type", !"int*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int*"}
+!4 = !{!"int*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{}
diff --git a/test/fmod.ll b/test/fmod.ll
index 923cdca..ae553e4 100644
--- a/test/fmod.ll
+++ b/test/fmod.ll
@@ -16,7 +16,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @fmod_kernel(float %out, float %in1, float %in2) #0 {
+define spir_kernel void @fmod_kernel(float %out, float %in1, float %in2) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = call spir_func float @_Z4fmodff(float %in1, float %in2) #2
   ret void
@@ -29,7 +29,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -38,13 +37,12 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!9}
 
-!0 = !{void (float, float, float)* @fmod_kernel, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 0, i32 0, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"float", !"float", !"float"}
-!4 = !{!"kernel_arg_base_type", !"float", !"float", !"float"}
-!5 = !{!"kernel_arg_type_qual", !"", !"", !""}
+!1 = !{i32 0, i32 0, i32 0}
+!2 = !{!"none", !"none", !"none"}
+!3 = !{!"float", !"float", !"float"}
+!4 = !{!"float", !"float", !"float"}
+!5 = !{!"", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
-!9 = !{!"clang version 3.6.1"} 
\ No newline at end of file
+!9 = !{!"clang version 3.6.1"}
diff --git a/test/group-decorate.ll b/test/group-decorate.ll
index 6e788b5..5561f76 100644
--- a/test/group-decorate.ll
+++ b/test/group-decorate.ll
@@ -18,7 +18,6 @@ entry:
 
 attributes #0 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -26,7 +25,6 @@ attributes #0 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!7}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (<4 x i8> addrspace(1)*, <4 x i8> addrspace(1)*, <4 x i8> addrspace(1)*)* @test}
 !1 = !{i32 1, i32 1, i32 1}
 !2 = !{!"none", !"none", !"none"}
 !3 = !{!"char4*", !"char4*", !"char4*"}
diff --git a/test/half_no_extension.ll b/test/half_no_extension.ll
index 4cbdf17..7c905b1 100644
--- a/test/half_no_extension.ll
+++ b/test/half_no_extension.ll
@@ -10,15 +10,15 @@
 ; RUN: FileCheck < %t.spt %s --check-prefix=CHECK-SPIRV
 ; RUN: llvm-spirv %t.bc -o %t.spv
 
-; CHECK-SPIRV: {{[0-9]+}} Capability Float16Buffer 
-; CHECK-SPIRV-NOT: {{[0-9]+}} Capability Float16 
+; CHECK-SPIRV: {{[0-9]+}} Capability Float16Buffer
+; CHECK-SPIRV-NOT: {{[0-9]+}} Capability Float16
 
 ; ModuleID = 'main'
 target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(<4 x float> addrspace(1)* %p, half addrspace(1)* %f) #0 {
+define spir_kernel void @test(<4 x float> addrspace(1)* %p, half addrspace(1)* %f) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %p.addr = alloca <4 x float> addrspace(1)*, align 8
   %f.addr = alloca half addrspace(1)*, align 8
@@ -40,7 +40,6 @@ declare spir_func void @_Z17vstorea_half4_rtpDv4_fmPU3AS1Dh(<4 x float>, i64, ha
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -49,12 +48,11 @@ attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "
 !opencl.compiler.options = !{!7}
 !llvm.ident = !{!8}
 
-!0 = !{void (<4 x float> addrspace(1)*, half addrspace(1)*)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"float4*", !"half*"}
-!4 = !{!"kernel_arg_base_type", !"float4*", !"half*"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
+!1 = !{i32 1, i32 1}
+!2 = !{!"none", !"none"}
+!3 = !{!"float4*", !"half*"}
+!4 = !{!"float4*", !"half*"}
+!5 = !{!"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{}
 !8 = !{!"clang version 3.6.1"}
diff --git a/test/image-unoptimized.ll b/test/image-unoptimized.ll
index b2f33ee..62caf1e 100644
--- a/test/image-unoptimized.ll
+++ b/test/image-unoptimized.ll
@@ -8,7 +8,7 @@ target triple = "spir-unknown-unknown"
 ; Function Attrs: nounwind
 ; CHECK: {{[0-9]*}} Store
 ; CHECK-NEXT: 1 Return
-define spir_kernel void @test_fn(%opencl.image2d_t addrspace(1)* %srcimg, i32 %sampler, <4 x float> addrspace(1)* %results) #0 {
+define spir_kernel void @test_fn(%opencl.image2d_t addrspace(1)* %srcimg, i32 %sampler, <4 x float> addrspace(1)* %results) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %srcimg.addr = alloca %opencl.image2d_t addrspace(1)*, align 4
   %sampler.addr = alloca i32, align 4
@@ -57,7 +57,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -65,12 +64,11 @@ attributes #2 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!7}
 
-!0 = !{void (%opencl.image2d_t addrspace(1)*, i32, <4 x float> addrspace(1)*)* @test_fn, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 0, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"image2d_t", !"sampler_t", !"float4*"}
-!4 = !{!"kernel_arg_base_type", !"image2d_t", !"sampler_t", !"float4*"}
-!5 = !{!"kernel_arg_type_qual", !"", !"", !""}
+!1 = !{i32 1, i32 0, i32 1}
+!2 = !{!"read_only", !"none", !"none"}
+!3 = !{!"image2d_t", !"sampler_t", !"float4*"}
+!4 = !{!"image2d_t", !"sampler_t", !"float4*"}
+!5 = !{!"", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{}
 !8 = !{!"cl_images"}
diff --git a/test/image.ll b/test/image.ll
index 5ae0b49..4f4cd77 100644
--- a/test/image.ll
+++ b/test/image.ll
@@ -39,7 +39,6 @@ attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "
 attributes #3 = { nounwind readnone }
 attributes #4 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -48,7 +47,6 @@ attributes #4 = { nounwind }
 !opencl.compiler.options = !{!7}
 !llvm.ident = !{!9}
 
-!0 = !{void (%opencl.image2d_t addrspace(1)*, %opencl.image2d_t addrspace(1)*)* @image_copy}
 !1 = !{i32 1, i32 1}
 !2 = !{!"read_only", !"write_only"}
 !3 = !{!"image2d_t", !"image2d_t"}
diff --git a/test/image_decl_func_arg.ll b/test/image_decl_func_arg.ll
index 748b560..b6431ad 100644
--- a/test/image_decl_func_arg.ll
+++ b/test/image_decl_func_arg.ll
@@ -30,7 +30,7 @@ entry:
 }
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(%opencl.image2d_ro_t addrspace(1)* %v1) #0 {
+define spir_kernel void @test(%opencl.image2d_ro_t addrspace(1)* %v1) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
 entry:
   call spir_func void @f0(%opencl.image2d_ro_t addrspace(1)* %v1, <2 x float> <float 1.000000e+00, float 5.000000e+00>) #0
   ret void
@@ -38,7 +38,6 @@ entry:
 
 attributes #0 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !spirv.Source = !{!6}
 !opencl.spir.version = !{!7}
@@ -47,12 +46,11 @@ attributes #0 = { nounwind }
 !opencl.used.optional.core.features = !{!9}
 !spirv.Generator = !{!10}
 
-!0 = !{void (%opencl.image2d_ro_t addrspace(1)*)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only"}
-!3 = !{!"kernel_arg_type", !"image2d_t"}
-!4 = !{!"kernel_arg_type_qual", !""}
-!5 = !{!"kernel_arg_base_type", !"image2d_t"}
+!1 = !{i32 1}
+!2 = !{!"read_only"}
+!3 = !{!"image2d_t"}
+!4 = !{!""}
+!5 = !{!"image2d_t"}
 !6 = !{i32 3, i32 200000}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/image_dim.ll b/test/image_dim.ll
index 7a0e0b8..97f3200 100644
--- a/test/image_dim.ll
+++ b/test/image_dim.ll
@@ -13,14 +13,13 @@ target triple = "spir-unknown-unknown"
 %opencl.image1d_buffer_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @image_d(%opencl.image1d_t addrspace(1)* %image1d_td6, %opencl.image1d_buffer_t addrspace(1)* %image1d_buffer_td8) #0 {
+define spir_kernel void @image_d(%opencl.image1d_t addrspace(1)* %image1d_td6, %opencl.image1d_buffer_t addrspace(1)* %image1d_buffer_td8) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   ret void
 }
 
 attributes #0 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !spirv.Source = !{!6}
 !opencl.spir.version = !{!7}
@@ -29,12 +28,11 @@ attributes #0 = { nounwind }
 !opencl.used.optional.core.features = !{!10}
 !spirv.Generator = !{!11}
 
-!0 = !{void (%opencl.image1d_t addrspace(1)*, %opencl.image1d_buffer_t addrspace(1)*)* @image_d, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"read_only"}
-!3 = !{!"kernel_arg_type", !"image1d_t", !"image1d_buffer_t"}
-!4 = !{!"kernel_arg_type_qual", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"image1d_t", !"image1d_buffer_t"}
+!1 = !{i32 1, i32 1}
+!2 = !{!"read_only", !"read_only"}
+!3 = !{!"image1d_t", !"image1d_buffer_t"}
+!4 = !{!"", !""}
+!5 = !{!"image1d_t", !"image1d_buffer_t"}
 !6 = !{i32 3, i32 100000}
 !7 = !{i32 1, i32 2}
 !8 = !{i32 1, i32 0}
diff --git a/test/layout.ll b/test/layout.ll
index d98f714..a663dd8 100644
--- a/test/layout.ll
+++ b/test/layout.ll
@@ -132,7 +132,7 @@ target triple = "spir"
 @a = common addrspace(1) global %struct.A zeroinitializer, align 4
 
 ; Function Attrs: nounwind
-define spir_kernel void @foo(<3 x i32> addrspace(1)* %a) #0 {
+define spir_kernel void @foo(<3 x i32> addrspace(1)* %a) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   call spir_func void @bar1(<3 x i32> addrspace(1)* %a)
   %loadVec4 = load <4 x i32> , <4 x i32> addrspace(2)* bitcast (<3 x i32> addrspace(2)* @b to <4 x i32> addrspace(2)*)
@@ -148,7 +148,6 @@ declare spir_func void @bar2(<3 x i32> addrspace(1)*, <3 x i32>) #1
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -157,11 +156,11 @@ attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "
 !opencl.compiler.options = !{!8}
 
 !0 = !{void (<3 x i32> addrspace(1)*)* @foo, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int3*"}
-!4 = !{!"kernel_arg_base_type", !"int3*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int3*"}
+!4 = !{!"int3*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/lifetime.ll b/test/lifetime.ll
index 95dec7b..b4cca0f 100644
--- a/test/lifetime.ll
+++ b/test/lifetime.ll
@@ -20,7 +20,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @lifetime_simple(i32 addrspace(1)* nocapture %res, i32 addrspace(1)* nocapture %lhs, i32 addrspace(1)* nocapture %rhs) #0 {
+define spir_kernel void @lifetime_simple(i32 addrspace(1)* nocapture %res, i32 addrspace(1)* nocapture %lhs, i32 addrspace(1)* nocapture %rhs) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
   %1 = alloca i32
   %2 = call spir_func i64 @_Z13get_global_idj(i32 0) #1
   %3 = shl i64 %2, 32
@@ -52,7 +52,6 @@ declare spir_func i64 @_Z13get_global_idj(i32) #1
 attributes #0 = { nounwind }
 attributes #1 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !spirv.Source = !{!6}
 !opencl.spir.version = !{!7}
@@ -61,12 +60,11 @@ attributes #1 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!8}
 !spirv.Generator = !{!9}
 
-!0 = !{void (i32 addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*)* @lifetime_simple, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"int*", !"int*", !"int*"}
-!4 = !{!"kernel_arg_type_qual", !"", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"int*", !"int*", !"int*"}
+!1 = !{i32 1, i32 1, i32 1}
+!2 = !{!"none", !"none", !"none"}
+!3 = !{!"int*", !"int*", !"int*"}
+!4 = !{!"", !"", !""}
+!5 = !{!"int*", !"int*", !"int*"}
 !6 = !{i32 3, i32 102000}
 !7 = !{i32 1, i32 2}
 !8 = !{}
diff --git a/test/link-attribute.ll b/test/link-attribute.ll
index f6b077e..6889f64 100644
--- a/test/link-attribute.ll
+++ b/test/link-attribute.ll
@@ -11,7 +11,7 @@ target triple = "spir64-unknown-unknown"
 @imageSampler = addrspace(2) constant i32 36, align 4
 
 ; Function Attrs: nounwind
-define spir_kernel void @sample_kernel(%opencl.image2d_t addrspace(1)* %input, float addrspace(1)* nocapture %xOffsets, float addrspace(1)* nocapture %yOffsets, <4 x float> addrspace(1)* nocapture %results) #0 {
+define spir_kernel void @sample_kernel(%opencl.image2d_t addrspace(1)* %input, float addrspace(1)* nocapture %xOffsets, float addrspace(1)* nocapture %yOffsets, <4 x float> addrspace(1)* nocapture %results) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
   %1 = tail call spir_func i64 @_Z13get_global_idj(i32 0) #1
   %2 = trunc i64 %1 to i32
   %3 = tail call spir_func i64 @_Z13get_global_idj(i32 1) #1
@@ -42,7 +42,6 @@ declare spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_f(%o
 attributes #0 = { nounwind }
 attributes #1 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!7}
 !opencl.ocl.version = !{!7}
@@ -50,13 +49,11 @@ attributes #1 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!9}
 !opencl.compiler.options = !{!10}
 
-!0 = !{void (%opencl.image2d_t addrspace(1)*, float addrspace(1)*, float addrspace(1)*, <4 x float> addrspace(1)*)* @sample_kernel, !1, !2, !3, !4, !5, !6}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"image2d_float", !"float*", !"float*", !"float4*"}
-!4 = !{!"kernel_arg_type_qual", !"", !"", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"image2d_t", !"float*", !"float*", !"float4*"}
-!6 = !{!"kernel_arg_name", !"input", !"xOffsets", !"yOffsets", !"results"}
+!1 = !{i32 1, i32 1, i32 1, i32 1}
+!2 = !{!"read_only", !"none", !"none", !"none"}
+!3 = !{!"image2d_float", !"float*", !"float*", !"float4*"}
+!4 = !{!"", !"", !"", !""}
+!5 = !{!"image2d_t", !"float*", !"float*", !"float4*"}
 !7 = !{i32 1, i32 2}
 !8 = !{}
 !9 = !{!"cl_images"}
diff --git a/test/linkage-types.ll b/test/linkage-types.ll
index 9e0ba2a..f54c947 100644
--- a/test/linkage-types.ll
+++ b/test/linkage-types.ll
@@ -138,7 +138,7 @@ entry:
 ; SPIRV: Function {{[0-9]+}} [[kern]]
 ; BACK-TO-LLVM: define spir_kernel void @kern()
 ; Function Attrs: nounwind
-define spir_kernel void @kern() #0 {
+define spir_kernel void @kern() #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !1 !kernel_arg_type !1 !kernel_arg_base_type !1 !kernel_arg_type_qual !1 {
 entry:
   call spir_func void @f()
   ret void
@@ -148,20 +148,13 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { inlinehint nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!7}
-!opencl.used.extensions = !{!8}
-!opencl.used.optional.core.features = !{!8}
-!opencl.compiler.options = !{!8}
-
-!0 = !{void ()* @kern, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{i32 2, i32 0}
-!8 = !{}
+!opencl.spir.version = !{!2}
+!opencl.ocl.version = !{!3}
+!opencl.used.extensions = !{!1}
+!opencl.used.optional.core.features = !{!1}
+!opencl.compiler.options = !{!1}
+
+!1 = !{}
+!2 = !{i32 1, i32 2}
+!3 = !{i32 2, i32 0}
diff --git a/test/linked-list.ll b/test/linked-list.ll
index 4716d76..8eb5972 100644
--- a/test/linked-list.ll
+++ b/test/linked-list.ll
@@ -8,14 +8,13 @@ target triple = "spir-unknown-unknown"
 %struct.Node.0 = type opaque
 
 ; Function Attrs: nounwind readnone
-define spir_kernel void @create_linked_lists(%struct.Node addrspace(1)* nocapture %pNodes, i32 addrspace(1)* nocapture %allocation_index, i32 %list_length) #0 {
+define spir_kernel void @create_linked_lists(%struct.Node addrspace(1)* nocapture %pNodes, i32 addrspace(1)* nocapture %allocation_index, i32 %list_length) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
 entry:
   ret void
 }
 
 attributes #0 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -23,12 +22,11 @@ attributes #0 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!7}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (%struct.Node addrspace(1)*, i32 addrspace(1)*, i32)* @create_linked_lists, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"struct Node*", !"int*", !"int"}
-!4 = !{!"kernel_arg_type_qual", !"", !"volatile ", !""}
-!5 = !{!"kernel_arg_base_type", !"struct Node*", !"int*", !"int"}
+!1 = !{i32 1, i32 1, i32 0}
+!2 = !{!"none", !"none", !"none"}
+!3 = !{!"struct Node*", !"int*", !"int"}
+!4 = !{!"", !"volatile ", !""}
+!5 = !{!"struct Node*", !"int*", !"int"}
 !6 = !{i32 2, i32 0}
 !7 = !{}
 !8 = !{!""}
diff --git a/test/memory_access.ll b/test/memory_access.ll
index 4ead0b8..3f2cde2 100644
--- a/test/memory_access.ll
+++ b/test/memory_access.ll
@@ -36,7 +36,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_load_store(i32 addrspace(1)* %destMemory, i32 addrspace(1)* %oldValues, i32 %newValue) #0 {
+define spir_kernel void @test_load_store(i32 addrspace(1)* %destMemory, i32 addrspace(1)* %oldValues, i32 %newValue) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %ptr = alloca i32 addrspace(4)*, align 8
   %0 = addrspacecast i32 addrspace(1)* %oldValues to i32 addrspace(4)*
@@ -58,7 +58,6 @@ declare spir_func i32 @_Z14atomic_cmpxchgPVU3AS1iii(i32 addrspace(1)*, i32, i32)
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -67,12 +66,11 @@ attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!10}
 
-!0 = !{void (i32 addrspace(1)*, i32 addrspace(1)*, i32)* @test_load_store, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"int*", !"int*", !"int"}
-!4 = !{!"kernel_arg_base_type", !"int*", !"int*", !"int"}
-!5 = !{!"kernel_arg_type_qual", !"volatile", !"", !""}
+!1 = !{i32 1, i32 1, i32 0}
+!2 = !{!"none", !"none", !"none"}
+!3 = !{!"int*", !"int*", !"int"}
+!4 = !{!"int*", !"int*", !"int"}
+!5 = !{!"volatile", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/multi_md.ll b/test/multi_md.ll
index 513ba2b..1c68911 100644
--- a/test/multi_md.ll
+++ b/test/multi_md.ll
@@ -13,7 +13,7 @@ target triple = "spir64-unknown-unknown"
 @var = addrspace(1) global %struct.my_struct_t { i8 97, i32 42 }, align 4
 
 ; Function Attrs: nounwind
-define spir_kernel void @__OpenCL_writer_kernel(i8 zeroext %c, i32 %i) #0 {
+define spir_kernel void @__OpenCL_writer_kernel(i8 zeroext %c, i32 %i) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %c.addr = alloca i8, align 1
   %i.addr = alloca i32, align 4
@@ -27,7 +27,7 @@ entry:
 }
 
 ; Function Attrs: nounwind
-define spir_kernel void @__OpenCL_reader_kernel(i8 addrspace(1)* %C, i32 addrspace(1)* %I) #0 {
+define spir_kernel void @__OpenCL_reader_kernel(i8 addrspace(1)* %C, i32 addrspace(1)* %I) #0 !kernel_arg_addr_space !8 !kernel_arg_access_qual !2 !kernel_arg_type !9 !kernel_arg_base_type !10 !kernel_arg_type_qual !5 {
 entry:
   %C.addr = alloca i8 addrspace(1)*, align 8
   %I.addr = alloca i32 addrspace(1)*, align 8
@@ -44,14 +44,13 @@ entry:
 
 attributes #0 = { nounwind }
 
-; "cl_images" should be encoded as BasicImage capability, 
+; "cl_images" should be encoded as BasicImage capability,
 ; but images are not used in this test case, so this capability is not required.
 ; CHECK-NOT: 4 Extension "cl_images"
 ; CHECK-DAG: 8 SourceExtension "cl_khr_int64_base_atomics"
 ; CHECK-DAG: 9 SourceExtension "cl_khr_int64_extended_atomics"
 ; CHECK: 3 Source 3 200000
 
-!opencl.kernels = !{!0, !7}
 !opencl.enable.FP_CONTRACT = !{}
 !llvm.ident = !{!12, !12}
 !opencl.ocl.version = !{!13, !13}
@@ -59,18 +58,14 @@ attributes #0 = { nounwind }
 !opencl.used.extensions = !{!24, !25}
 !opencl.used.optional.core.features = !{!26, !27}
 
-!0 = !{void (i8, i32)* @__OpenCL_writer_kernel, !1, !2, !3, !4, !5, !6}
-!1 = !{!"kernel_arg_addr_space", i32 0, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"uchar", !"uint"}
-!4 = !{!"kernel_arg_base_type", !"uchar", !"uint"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
-!6 = !{!"kernel_arg_name", !"c", !"i"}
-!7 = !{void (i8 addrspace(1)*, i32 addrspace(1)*)* @__OpenCL_reader_kernel, !8, !2, !9, !10, !5, !11}
-!8 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!9 = !{!"kernel_arg_type", !"uchar*", !"uint*"}
-!10 = !{!"kernel_arg_base_type", !"uchar*", !"uint*"}
-!11 = !{!"kernel_arg_name", !"C", !"I"}
+!1 = !{i32 0, i32 0}
+!2 = !{!"none", !"none"}
+!3 = !{!"uchar", !"uint"}
+!4 = !{!"uchar", !"uint"}
+!5 = !{!"", !""}
+!8 = !{i32 1, i32 1}
+!9 = !{!"uchar*", !"uint*"}
+!10 = !{!"uchar*", !"uint*"}
 !12 = !{!"clang version 3.6 (tags/RELEASE_361/rc1)"}
 !13 = !{i32 2, i32 0}
 !14 = !{!15, !15, i64 0}
diff --git a/test/no_capability_shader.ll b/test/no_capability_shader.ll
index 65f3d26..0c858be 100644
--- a/test/no_capability_shader.ll
+++ b/test/no_capability_shader.ll
@@ -14,14 +14,13 @@ target triple = "spir64-unknown-unknown"
 %opencl.image1d_buffer_ro_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @sample_test(%opencl.image2d_ro_t addrspace(1)* %src, %opencl.image1d_buffer_ro_t addrspace(1)* %buf) #0 {
+define spir_kernel void @sample_test(%opencl.image2d_ro_t addrspace(1)* %src, %opencl.image1d_buffer_ro_t addrspace(1)* %buf) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   ret void
 }
 
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -30,12 +29,11 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!9}
 
-!0 = !{void (%opencl.image2d_ro_t addrspace(1)*, %opencl.image1d_buffer_ro_t addrspace(1)*)* @sample_test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"read_only"}
-!3 = !{!"kernel_arg_type", !"__read_only image2d_t", !"__read_only image1d_buffer_t"}
-!4 = !{!"kernel_arg_base_type", !"__read_only image2d_t", !"__read_only image1d_buffer_t"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
+!1 = !{i32 1, i32 1}
+!2 = !{!"read_only", !"read_only"}
+!3 = !{!"__read_only image2d_t", !"__read_only image1d_buffer_t"}
+!4 = !{!"__read_only image2d_t", !"__read_only image1d_buffer_t"}
+!5 = !{!"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/select.ll b/test/select.ll
index 778bb92..4628dbc 100644
--- a/test/select.ll
+++ b/test/select.ll
@@ -11,7 +11,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(i32 %op1, i32 %op2) #0 {
+define spir_kernel void @test(i32 %op1, i32 %op2) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %0 = trunc i8 undef to i1
   %call = call spir_func i32 @_Z14__spirv_Selectbii(i1 zeroext %0, i32 %op1, i32 %op2) #2
@@ -25,7 +25,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -34,13 +33,12 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!9}
 
-!0 = !{void (i32, i32)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 0, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"i32", !"i32"}
-!4 = !{!"kernel_arg_base_type", !"i32", !"i32"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
+!1 = !{i32 0, i32 0}
+!2 = !{!"none", !"none"}
+!3 = !{!"i32", !"i32"}
+!4 = !{!"i32", !"i32"}
+!5 = !{!"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
-!9 = !{!"clang version 3.6.1"}
\ No newline at end of file
+!9 = !{!"clang version 3.6.1"}
diff --git a/test/simple.ll b/test/simple.ll
index 153ff2c..f000573 100644
--- a/test/simple.ll
+++ b/test/simple.ll
@@ -7,7 +7,7 @@ target triple = "spir64-unknown-unknown"
 ; CHECK: Capability Float64
 ; CHECK: "fun01"
 ; Function Attrs: nounwind
-define spir_kernel void @fun01(i32 addrspace(1)* noalias %a, i32 addrspace(1)* %b, i32 %c) #0 {
+define spir_kernel void @fun01(i32 addrspace(1)* noalias %a, i32 addrspace(1)* %b, i32 %c) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 !reqd_work_group_size !6 {
 entry:
   %a.addr = alloca i32 addrspace(1)*, align 8
   %b.addr = alloca i32 addrspace(1)*, align 8
@@ -37,7 +37,7 @@ if.end:                                           ; preds = %if.then, %entry
 
 ; CHECK: "fun02"
 ; Function Attrs: nounwind
-define spir_kernel void @fun02(double addrspace(1)* %a, double addrspace(1)* %b, i32 %c) #0 {
+define spir_kernel void @fun02(double addrspace(1)* %a, double addrspace(1)* %b, i32 %c) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !8 !kernel_arg_base_type !9 !kernel_arg_type_qual !10 !vec_type_hint !11 {
 entry:
   %a.addr = alloca double addrspace(1)*, align 8
   %b.addr = alloca double addrspace(1)*, align 8
@@ -133,7 +133,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0, !7}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!12}
 !opencl.ocl.version = !{!12}
@@ -141,18 +140,16 @@ attributes #2 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!14}
 !opencl.compiler.options = !{!13}
 
-!0 = !{void (i32 addrspace(1)*, i32 addrspace(1)*, i32)* @fun01, !1, !2, !3, !4, !5, !6}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"int*", !"int*", !"int"}
-!4 = !{!"kernel_arg_base_type", !"int*", !"int*", !"int"}
-!5 = !{!"kernel_arg_type_qual", !"restrict", !"const", !""}
-!6 = !{!"reqd_work_group_size", i32 1, i32 2, i32 3}
-!7 = !{void (double addrspace(1)*, double addrspace(1)*, i32)* @fun02, !1, !2, !8, !9, !10, !11}
-!8 = !{!"kernel_arg_type", !"double*", !"double*", !"int"}
-!9 = !{!"kernel_arg_base_type", !"double*", !"double*", !"int"}
-!10 = !{!"kernel_arg_type_qual", !"", !"", !""}
-!11 = !{!"vec_type_hint", double undef, i32 1}
+!1 = !{i32 1, i32 1, i32 0}
+!2 = !{!"none", !"none", !"none"}
+!3 = !{!"int*", !"int*", !"int"}
+!4 = !{!"int*", !"int*", !"int"}
+!5 = !{!"restrict", !"const", !""}
+!6 = !{i32 1, i32 2, i32 3}
+!8 = !{!"double*", !"double*", !"int"}
+!9 = !{!"double*", !"double*", !"int"}
+!10 = !{!"", !"", !""}
+!11 = !{double undef, i32 1}
 !12 = !{i32 1, i32 2}
 !13 = !{}
 !14 = !{!"cl_doubles"}
diff --git a/test/store.ll b/test/store.ll
index 1d6ed1d..4eca136 100644
--- a/test/store.ll
+++ b/test/store.ll
@@ -5,7 +5,7 @@ target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
 ; CHECK: "foo"
-define spir_kernel void @foo(i32 addrspace(1)* %a) #0 {
+define spir_kernel void @foo(i32 addrspace(1)* %a) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %a.addr = alloca i32 addrspace(1)*, align 4
   store i32 addrspace(1)* %a, i32 addrspace(1)** %a.addr, align 4
@@ -17,7 +17,6 @@ entry:
 
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -25,11 +24,10 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 !opencl.used.optional.core.features = !{!7}
 !opencl.compiler.options = !{!7}
 
-!0 = !{void (i32 addrspace(1)*)* @foo, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int*"}
-!4 = !{!"kernel_arg_base_type", !"int*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int*"}
+!4 = !{!"int*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{}
diff --git a/test/transcoding/AtomicCompareExchangeExplicit_cl20.ll b/test/transcoding/AtomicCompareExchangeExplicit_cl20.ll
index 831bd30..ea2fb24 100644
--- a/test/transcoding/AtomicCompareExchangeExplicit_cl20.ll
+++ b/test/transcoding/AtomicCompareExchangeExplicit_cl20.ll
@@ -53,7 +53,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir"
 
 ; Function Attrs: nounwind
-define spir_kernel void @testAtomicCompareExchangeExplicit_cl20(i32 addrspace(1)* %object, i32 addrspace(1)* %expected, i32 %desired) #0 {
+define spir_kernel void @testAtomicCompareExchangeExplicit_cl20(i32 addrspace(1)* %object, i32 addrspace(1)* %expected, i32 %desired) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %0 = addrspacecast i32 addrspace(1)* %object to i32 addrspace(4)*
   %1 = addrspacecast i32 addrspace(1)* %expected to i32 addrspace(4)*
@@ -76,7 +76,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -84,12 +83,11 @@ attributes #2 = { nounwind }
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (i32 addrspace(1)*, i32 addrspace(1)*, i32)* @testAtomicCompareExchangeExplicit_cl20, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"atomic_int*", !"int*", !"int"}
-!4 = !{!"kernel_arg_base_type", !"_Atomic(int)*", !"int*", !"int"}
-!5 = !{!"kernel_arg_type_qual", !"volatile", !"", !""}
+!1 = !{i32 1, i32 1, i32 0}
+!2 = !{!"none", !"none", !"none"}
+!3 = !{!"atomic_int*", !"int*", !"int"}
+!4 = !{!"_Atomic(int)*", !"int*", !"int"}
+!5 = !{!"volatile", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/BuildNDRange.ll b/test/transcoding/BuildNDRange.ll
index 50a1151..49c7e8a 100644
--- a/test/transcoding/BuildNDRange.ll
+++ b/test/transcoding/BuildNDRange.ll
@@ -20,7 +20,7 @@ target triple = "spir"
 %struct.ndrange_t = type { i32, [3 x i32], [3 x i32], [3 x i32] }
 
 ; Function Attrs: nounwind
-define spir_kernel void @test() #0 {
+define spir_kernel void @test() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
   %ndrange = alloca %struct.ndrange_t, align 4
   call spir_func void @_Z10ndrange_1Djj(%struct.ndrange_t* sret %ndrange, i32 123, i32 456)
   ret void
@@ -31,22 +31,13 @@ declare spir_func void @_Z10ndrange_1Djj(%struct.ndrange_t* sret, i32, i32) #1
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!7}
-!opencl.used.extensions = !{!8}
-!opencl.used.optional.core.features = !{!8}
-!opencl.compiler.options = !{!8}
-!llvm.ident = !{!9}
-
-!0 = !{void ()* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{i32 2, i32 0}
-!8 = !{}
-!9 = !{!"clang version 3.6.1 "}
+!opencl.spir.version = !{!1}
+!opencl.ocl.version = !{!2}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
+!opencl.compiler.options = !{!0}
+
+!0 = !{}
+!1 = !{i32 1, i32 2}
+!2 = !{i32 2, i32 0}
diff --git a/test/transcoding/OpAllAny.ll b/test/transcoding/OpAllAny.ll
index 9e4dffe..9bde406 100644
--- a/test/transcoding/OpAllAny.ll
+++ b/test/transcoding/OpAllAny.ll
@@ -16,7 +16,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @testKernel() #0 {
+define spir_kernel void @testKernel() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
 entry:
   %cmp = icmp ne <2 x i64> zeroinitializer, <i64 1, i64 1>
   %sext = sext <2 x i1> %cmp to <2 x i64>
@@ -35,20 +35,13 @@ declare spir_func i32 @_Z3anyDv2_l(<2 x i64>) #1
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!7}
-!opencl.used.extensions = !{!8}
-!opencl.used.optional.core.features = !{!8}
-!opencl.compiler.options = !{!8}
-
-!0 = !{void ()* @testKernel, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{i32 2, i32 0}
-!8 = !{}
+!opencl.spir.version = !{!1}
+!opencl.ocl.version = !{!2}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
+!opencl.compiler.options = !{!0}
+
+!0 = !{}
+!1 = !{i32 1, i32 2}
+!2 = !{i32 2, i32 0}
diff --git a/test/transcoding/OpConstantBool.ll b/test/transcoding/OpConstantBool.ll
index daca015..4182e2b 100644
--- a/test/transcoding/OpConstantBool.ll
+++ b/test/transcoding/OpConstantBool.ll
@@ -19,7 +19,7 @@ entry:
 }
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(i32 addrspace(1)* %i) #0 {
+define spir_kernel void @test(i32 addrspace(1)* %i) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %i.addr = alloca i32 addrspace(1)*, align 4
   store i32 addrspace(1)* %i, i32 addrspace(1)** %i.addr, align 4
@@ -32,7 +32,6 @@ entry:
 
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -40,12 +39,11 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (i32 addrspace(1)*)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int*"}
-!4 = !{!"kernel_arg_base_type", !"int*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int*"}
+!4 = !{!"int*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/OpConstantSampler.ll b/test/transcoding/OpConstantSampler.ll
index 044f27f..3542184 100644
--- a/test/transcoding/OpConstantSampler.ll
+++ b/test/transcoding/OpConstantSampler.ll
@@ -25,49 +25,36 @@
 ; CHECK-LLVM: call spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_f
 ; CHECK-LLVM: call spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_f
 
+target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024"
 target triple = "spir"
 
 %opencl.image2d_ro_t = type opaque
 %opencl.sampler_t = type opaque
 
-; Function Attrs: noinline nounwind optnone
-define spir_kernel void @foo(%opencl.image2d_ro_t addrspace(1)* %src) #0 !kernel_arg_addr_space !5 !kernel_arg_access_qual !6 !kernel_arg_type !7 !kernel_arg_base_type !7 !kernel_arg_type_qual !8 {
+; Function Attrs: convergent nounwind
+define spir_func <4 x float> @foo(%opencl.image2d_ro_t addrspace(1)* %src) local_unnamed_addr #0 {
 entry:
-  %src.addr = alloca %opencl.image2d_ro_t addrspace(1)*, align 4
-  store %opencl.image2d_ro_t addrspace(1)* %src, %opencl.image2d_ro_t addrspace(1)** %src.addr, align 4
-  %sampler1 = call %opencl.sampler_t addrspace(2)* @__translate_sampler_initializer(i32 23)
-  %sampler2 = call %opencl.sampler_t addrspace(2)* @__translate_sampler_initializer(i32 0)
-  %0 = load %opencl.image2d_ro_t addrspace(1)*, %opencl.image2d_ro_t addrspace(1)** %src.addr, align 4
-  %call = call spir_func <4 x float> @_Z11read_imagef14ocl_image2d_ro11ocl_samplerDv2_ff(%opencl.image2d_ro_t addrspace(1)* %0, %opencl.sampler_t addrspace(2)* %sampler1, <2 x float> zeroinitializer, float 0.000000e+00) #2
-  %1 = load %opencl.image2d_ro_t addrspace(1)*, %opencl.image2d_ro_t addrspace(1)** %src.addr, align 4
-  %call1 = call spir_func <4 x float> @_Z11read_imagef14ocl_image2d_ro11ocl_samplerDv2_ff(%opencl.image2d_ro_t addrspace(1)* %1, %opencl.sampler_t addrspace(2)* %sampler2, <2 x float> zeroinitializer, float 0.000000e+00) #2
-  ret void
+  %0 = tail call %opencl.sampler_t addrspace(2)* @__translate_sampler_initializer(i32 23) #2
+  %1 = tail call %opencl.sampler_t addrspace(2)* @__translate_sampler_initializer(i32 0) #2
+  %call = tail call spir_func <4 x float> @_Z11read_imagef14ocl_image2d_ro11ocl_samplerDv2_ff(%opencl.image2d_ro_t addrspace(1)* %src, %opencl.sampler_t addrspace(2)* %0, <2 x float> zeroinitializer, float 0.000000e+00) #3
+  %call1 = tail call spir_func <4 x float> @_Z11read_imagef14ocl_image2d_ro11ocl_samplerDv2_ff(%opencl.image2d_ro_t addrspace(1)* %src, %opencl.sampler_t addrspace(2)* %1, <2 x float> zeroinitializer, float 0.000000e+00) #3
+  %add = fadd <4 x float> %call, %call1
+  ret <4 x float> %add
 }
 
-declare %opencl.sampler_t addrspace(2)* @__translate_sampler_initializer(i32)
+declare %opencl.sampler_t addrspace(2)* @__translate_sampler_initializer(i32) local_unnamed_addr
 
-; Function Attrs: nounwind readonly
-declare spir_func <4 x float> @_Z11read_imagef14ocl_image2d_ro11ocl_samplerDv2_ff(%opencl.image2d_ro_t addrspace(1)*, %opencl.sampler_t addrspace(2)*, <2 x float>, float) #1
+; Function Attrs: convergent nounwind readonly
+declare spir_func <4 x float> @_Z11read_imagef14ocl_image2d_ro11ocl_samplerDv2_ff(%opencl.image2d_ro_t addrspace(1)*, %opencl.sampler_t addrspace(2)*, <2 x float>, float) local_unnamed_addr #1
 
-attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
-attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
-attributes #2 = { nounwind readonly }
+attributes #0 = { convergent nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "denorms-are-zero"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
+attributes #1 = { convergent nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "denorms-are-zero"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
+attributes #2 = { nounwind }
+attributes #3 = { convergent nounwind readonly }
 
 !llvm.module.flags = !{!0}
-!opencl.enable.FP_CONTRACT = !{}
 !opencl.ocl.version = !{!1}
 !opencl.spir.version = !{!1}
-!opencl.used.extensions = !{!2}
-!opencl.used.optional.core.features = !{!3}
-!opencl.compiler.options = !{!2}
-!llvm.ident = !{!4}
 
 !0 = !{i32 1, !"wchar_size", i32 4}
 !1 = !{i32 2, i32 0}
-!2 = !{}
-!3 = !{!"cl_images"}
-!4 = !{!"clang version 5.0.1 (cfe/trunk)"}
-!5 = !{i32 1}
-!6 = !{!"read_only"}
-!7 = !{!"image2d_t"}
-!8 = !{!""}
diff --git a/test/transcoding/OpControlBarrier_cl12.ll b/test/transcoding/OpControlBarrier_cl12.ll
index daf9b34..9e97c21 100644
--- a/test/transcoding/OpControlBarrier_cl12.ll
+++ b/test/transcoding/OpControlBarrier_cl12.ll
@@ -33,7 +33,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test() #0 {
+define spir_kernel void @test() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
 entry:
   call spir_func void @_Z7barrierj(i32 2) ; global mem fence
   call spir_func void @_Z7barrierj(i32 1) ; local mem fence
@@ -52,20 +52,13 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!7}
-!opencl.used.extensions = !{!8}
-!opencl.used.optional.core.features = !{!8}
-!opencl.compiler.options = !{!8}
+!opencl.spir.version = !{!1}
+!opencl.ocl.version = !{!2}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
+!opencl.compiler.options = !{!0}
 
-!0 = !{void ()* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{i32 1, i32 2}
-!8 = !{}
+!0 = !{}
+!1 = !{i32 1, i32 2}
+!2 = !{i32 1, i32 2}
diff --git a/test/transcoding/OpControlBarrier_cl20.ll b/test/transcoding/OpControlBarrier_cl20.ll
index 99987d1..27c8128 100644
--- a/test/transcoding/OpControlBarrier_cl20.ll
+++ b/test/transcoding/OpControlBarrier_cl20.ll
@@ -69,7 +69,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test() #0 {
+define spir_kernel void @test() #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !1 !kernel_arg_type !1 !kernel_arg_base_type !1 !kernel_arg_type_qual !1 {
 entry:
   call spir_func void @_Z18work_group_barrierj(i32 2) ; global mem fence
   call spir_func void @_Z18work_group_barrierj(i32 1) ; local mem fence
@@ -104,20 +104,13 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!7}
-!opencl.used.extensions = !{!8}
-!opencl.used.optional.core.features = !{!8}
-!opencl.compiler.options = !{!8}
-
-!0 = !{void ()* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{i32 2, i32 0}
-!8 = !{}
+!opencl.spir.version = !{!2}
+!opencl.ocl.version = !{!3}
+!opencl.used.extensions = !{!1}
+!opencl.used.optional.core.features = !{!1}
+!opencl.compiler.options = !{!1}
+
+!1 = !{}
+!2 = !{i32 1, i32 2}
+!3 = !{i32 2, i32 0}
diff --git a/test/transcoding/OpControlBarrier_cl20_subgroup.ll b/test/transcoding/OpControlBarrier_cl20_subgroup.ll
index 0ad3bd4..fe81b01 100644
--- a/test/transcoding/OpControlBarrier_cl20_subgroup.ll
+++ b/test/transcoding/OpControlBarrier_cl20_subgroup.ll
@@ -103,7 +103,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -111,12 +110,6 @@ attributes #2 = { nounwind }
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void ()* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/OpControlBarrier_cl21.ll b/test/transcoding/OpControlBarrier_cl21.ll
index 1dde94c..3e8f787 100644
--- a/test/transcoding/OpControlBarrier_cl21.ll
+++ b/test/transcoding/OpControlBarrier_cl21.ll
@@ -68,7 +68,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test() #0 {
+define spir_kernel void @test() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
 entry:
   call spir_func void @_Z17sub_group_barrierj(i32 2) ; global mem fence
   call spir_func void @_Z17sub_group_barrierj(i32 1) ; local mem fence
@@ -103,20 +103,13 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!7}
-!opencl.used.extensions = !{!8}
-!opencl.used.optional.core.features = !{!8}
-!opencl.compiler.options = !{!8}
-
-!0 = !{void ()* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{i32 2, i32 1}
-!8 = !{}
+!opencl.spir.version = !{!1}
+!opencl.ocl.version = !{!2}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
+!opencl.compiler.options = !{!0}
+
+!0 = !{}
+!1 = !{i32 1, i32 2}
+!2 = !{i32 2, i32 1}
diff --git a/test/transcoding/OpDot.ll b/test/transcoding/OpDot.ll
index 4804885..a61341b 100644
--- a/test/transcoding/OpDot.ll
+++ b/test/transcoding/OpDot.ll
@@ -14,7 +14,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(float %f) #0 {
+define spir_kernel void @test(float %f) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func float @_Z3dotff(float %f, float %f) #2
   ret void
@@ -26,7 +26,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -34,12 +33,11 @@ attributes #2 = { nounwind }
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (float)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"float"}
-!4 = !{!"kernel_arg_base_type", !"float"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 0}
+!2 = !{!"none"}
+!3 = !{!"float"}
+!4 = !{!"float"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/OpGenericPtrMemSemantics.ll b/test/transcoding/OpGenericPtrMemSemantics.ll
index 6e626d9..053ed64 100644
--- a/test/transcoding/OpGenericPtrMemSemantics.ll
+++ b/test/transcoding/OpGenericPtrMemSemantics.ll
@@ -43,7 +43,7 @@ entry:
 declare spir_func i32 @_Z9get_fencePU3AS4v(i8 addrspace(4)*) #2
 
 ; Function Attrs: nounwind
-define spir_kernel void @testKernel(i32 addrspace(1)* nocapture %results) #1 {
+define spir_kernel void @testKernel(i32 addrspace(1)* nocapture %results) #1 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func i32 @_Z13get_global_idj(i32 0) #3
   %0 = load i32, i32 addrspace(1)* @gint, align 4
@@ -65,7 +65,6 @@ attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #3 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -73,12 +72,11 @@ attributes #3 = { nounwind }
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (i32 addrspace(1)*)* @testKernel, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"uint*"}
-!4 = !{!"kernel_arg_base_type", !"uint*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"uint*"}
+!4 = !{!"uint*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/OpGroupAllAny.ll b/test/transcoding/OpGroupAllAny.ll
index 37fc72c..6ee8d2f 100644
--- a/test/transcoding/OpGroupAllAny.ll
+++ b/test/transcoding/OpGroupAllAny.ll
@@ -18,7 +18,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(i32 addrspace(1)* nocapture readnone %i) #0 {
+define spir_kernel void @test(i32 addrspace(1)* nocapture readnone %i) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func i32 @_Z14work_group_alli(i32 5) #2
   %call1 = tail call spir_func i32 @_Z14work_group_anyi(i32 5) #2
@@ -33,7 +33,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -41,12 +40,11 @@ attributes #2 = { nounwind }
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (i32 addrspace(1)*)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int*"}
-!4 = !{!"kernel_arg_base_type", !"int*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int*"}
+!4 = !{!"int*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/OpGroupAsyncCopy.ll b/test/transcoding/OpGroupAsyncCopy.ll
index 9be9e63..fb56af5 100644
--- a/test/transcoding/OpGroupAsyncCopy.ll
+++ b/test/transcoding/OpGroupAsyncCopy.ll
@@ -16,7 +16,7 @@ target triple = "spir-unknown-unknown"
 %opencl.event_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_fn(<2 x i8> addrspace(1)* %src, <2 x i8> addrspace(1)* %dst, <2 x i8> addrspace(3)* %localBuffer, i32 %copiesPerWorkgroup, i32 %copiesPerWorkItem) #0 {
+define spir_kernel void @test_fn(<2 x i8> addrspace(1)* %src, <2 x i8> addrspace(1)* %dst, <2 x i8> addrspace(3)* %localBuffer, i32 %copiesPerWorkgroup, i32 %copiesPerWorkItem) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %src.addr = alloca <2 x i8> addrspace(1)*, align 4
   %dst.addr = alloca <2 x i8> addrspace(1)*, align 4
@@ -123,7 +123,6 @@ declare spir_func void @_Z17wait_group_eventsiPU3AS49ocl_event(i32, %opencl.even
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -131,12 +130,11 @@ attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (<2 x i8> addrspace(1)*, <2 x i8> addrspace(1)*, <2 x i8> addrspace(3)*, i32, i32)* @test_fn, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 3, i32 0, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"char2*", !"char2*", !"char2*", !"int", !"int"}
-!4 = !{!"kernel_arg_base_type", !"char2*", !"char2*", !"char2*", !"int", !"int"}
-!5 = !{!"kernel_arg_type_qual", !"const", !"", !"", !"", !""}
+!1 = !{i32 1, i32 1, i32 3, i32 0, i32 0}
+!2 = !{!"none", !"none", !"none", !"none", !"none"}
+!3 = !{!"char2*", !"char2*", !"char2*", !"int", !"int"}
+!4 = !{!"char2*", !"char2*", !"char2*", !"int", !"int"}
+!5 = !{!"const", !"", !"", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/OpImageQuerySize.ll b/test/transcoding/OpImageQuerySize.ll
index 4b64d22..f5d6967 100644
--- a/test/transcoding/OpImageQuerySize.ll
+++ b/test/transcoding/OpImageQuerySize.ll
@@ -52,7 +52,7 @@ target triple = "spir64-unknown-unknown"
 ; CHECK-SPIRV-NOT: {{[0-9]*}} ExtInst {{[0-9]*}} {{[0-9]*}} {{[0-9]*}} get_image_array_size
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_image1d(i32 addrspace(1)* nocapture %sizes, %opencl.image1d_t addrspace(1)* %img, %opencl.image1d_buffer_t addrspace(1)* %buffer, %opencl.image1d_array_t addrspace(1)* %array) #0 {
+define spir_kernel void @test_image1d(i32 addrspace(1)* nocapture %sizes, %opencl.image1d_t addrspace(1)* %img, %opencl.image1d_buffer_t addrspace(1)* %buffer, %opencl.image1d_array_t addrspace(1)* %array) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
   %1 = tail call spir_func i32 @_Z15get_image_width11ocl_image1d(%opencl.image1d_t addrspace(1)* %img) #1
   %2 = tail call spir_func i32 @_Z15get_image_width17ocl_image1dbuffer(%opencl.image1d_buffer_t addrspace(1)* %buffer) #1
   %3 = tail call spir_func i32 @_Z15get_image_width16ocl_image1darray(%opencl.image1d_array_t addrspace(1)* %array) #1
@@ -110,7 +110,7 @@ declare spir_func i64 @_Z20get_image_array_size16ocl_image1darray(%opencl.image1
 ; CHECK:   shufflevector <3 x i32> {{.*}} <2 x i32>
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_image2d(i32 addrspace(1)* nocapture %sizes, %opencl.image2d_t addrspace(1)* %img, %opencl.image2d_depth_t addrspace(1)* nocapture %img_depth, %opencl.image2d_array_t addrspace(1)* %array, %opencl.image2d_array_depth_t addrspace(1)* nocapture %array_depth) #0 {
+define spir_kernel void @test_image2d(i32 addrspace(1)* nocapture %sizes, %opencl.image2d_t addrspace(1)* %img, %opencl.image2d_depth_t addrspace(1)* nocapture %img_depth, %opencl.image2d_array_t addrspace(1)* %array, %opencl.image2d_array_depth_t addrspace(1)* nocapture %array_depth) #0 !kernel_arg_addr_space !7 !kernel_arg_access_qual !8 !kernel_arg_type !9 !kernel_arg_base_type !11 !kernel_arg_type_qual !10 {
   %1 = tail call spir_func i32 @_Z15get_image_width11ocl_image2d(%opencl.image2d_t addrspace(1)* %img) #1
   %2 = tail call spir_func i32 @_Z16get_image_height11ocl_image2d(%opencl.image2d_t addrspace(1)* %img) #1
   %3 = tail call spir_func <2 x i32> @_Z13get_image_dim11ocl_image2d(%opencl.image2d_t addrspace(1)* %img) #1
@@ -175,7 +175,7 @@ declare spir_func <2 x i32> @_Z13get_image_dim16ocl_image2darray(%opencl.image2d
 ; CHECK:   shufflevector <3 x i32> {{.*}} <4 x i32>
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_image3d(i32 addrspace(1)* nocapture %sizes, %opencl.image3d_t addrspace(1)* %img) #0 {
+define spir_kernel void @test_image3d(i32 addrspace(1)* nocapture %sizes, %opencl.image3d_t addrspace(1)* %img) #0 !kernel_arg_addr_space !13 !kernel_arg_access_qual !14 !kernel_arg_type !15 !kernel_arg_base_type !17 !kernel_arg_type_qual !16 {
   %1 = tail call spir_func i32 @_Z15get_image_width11ocl_image3d(%opencl.image3d_t addrspace(1)* %img) #1
   %2 = tail call spir_func i32 @_Z16get_image_height11ocl_image3d(%opencl.image3d_t addrspace(1)* %img) #1
   %3 = tail call spir_func i32 @_Z15get_image_depth11ocl_image3d(%opencl.image3d_t addrspace(1)* %img) #1
@@ -223,7 +223,7 @@ declare spir_func <4 x i32> @_Z13get_image_dim11ocl_image3d(%opencl.image3d_t ad
 ; CHECK:   extractelement <3 x i32> {{.*}} 1
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_image2d_array_depth_t(i32 addrspace(1)* nocapture %sizes, %opencl.image2d_array_depth_t addrspace(1)* %array) #0 {
+define spir_kernel void @test_image2d_array_depth_t(i32 addrspace(1)* nocapture %sizes, %opencl.image2d_array_depth_t addrspace(1)* %array) #0 !kernel_arg_addr_space !27 !kernel_arg_access_qual !28 !kernel_arg_type !29 !kernel_arg_base_type !31 !kernel_arg_type_qual !30 {
   %1 = tail call spir_func i32 @_Z15get_image_width21ocl_image2darraydepth(%opencl.image2d_array_depth_t addrspace(1)* %array) #1
   %2 = tail call spir_func i32 @_Z16get_image_height21ocl_image2darraydepth(%opencl.image2d_array_depth_t addrspace(1)* %array) #1
   %3 = tail call spir_func i64 @_Z20get_image_array_size21ocl_image2darraydepth(%opencl.image2d_array_depth_t addrspace(1)* %array) #1
@@ -246,7 +246,6 @@ declare spir_func i64 @_Z20get_image_array_size21ocl_image2darraydepth(%opencl.i
 attributes #0 = { nounwind }
 attributes #1 = { nounwind readnone }
 
-!opencl.kernels = !{!0, !6, !12}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!18}
 !opencl.ocl.version = !{!18}
@@ -254,24 +253,21 @@ attributes #1 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!20}
 !opencl.compiler.options = !{!21}
 
-!0 = !{void (i32 addrspace(1)*, %opencl.image1d_t addrspace(1)*, %opencl.image1d_buffer_t addrspace(1)*, %opencl.image1d_array_t addrspace(1)*)* @test_image1d, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"read_only", !"read_only", !"read_only"}
-!3 = !{!"kernel_arg_type", !"int*", !"image1d_t", !"image1d_buffer_t", !"image1d_array_t"}
-!4 = !{!"kernel_arg_type_qual", !"", !"", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"int*", !"image1d_t", !"image1d_buffer_t", !"image1d_array_t"}
-!6 = !{void (i32 addrspace(1)*, %opencl.image2d_t addrspace(1)*, %opencl.image2d_depth_t addrspace(1)*, %opencl.image2d_array_t addrspace(1)*, %opencl.image2d_array_depth_t addrspace(1)*)* @test_image2d, !7, !8, !9, !10, !11}
-!7 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 1, i32 1}
-!8 = !{!"kernel_arg_access_qual", !"none", !"read_only", !"read_only", !"read_only", !"read_only"}
-!9 = !{!"kernel_arg_type", !"int*", !"image2d_t", !"image2d_depth_t", !"image2d_array_t", !"image2d_array_depth_t"}
-!10 = !{!"kernel_arg_type_qual", !"", !"", !"", !"", !""}
-!11 = !{!"kernel_arg_base_type", !"int*", !"image2d_t", !"image2d_depth_t", !"image2d_array_t", !"image2d_array_depth_t"}
-!12 = !{void (i32 addrspace(1)*, %opencl.image3d_t addrspace(1)*)* @test_image3d, !13, !14, !15, !16, !17}
-!13 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!14 = !{!"kernel_arg_access_qual", !"none", !"read_only"}
-!15 = !{!"kernel_arg_type", !"int*", !"image3d_t"}
-!16 = !{!"kernel_arg_type_qual", !"", !""}
-!17 = !{!"kernel_arg_base_type", !"int*", !"image3d_t"}
+!1 = !{i32 1, i32 1, i32 1, i32 1}
+!2 = !{!"none", !"read_only", !"read_only", !"read_only"}
+!3 = !{!"int*", !"image1d_t", !"image1d_buffer_t", !"image1d_array_t"}
+!4 = !{!"", !"", !"", !""}
+!5 = !{!"int*", !"image1d_t", !"image1d_buffer_t", !"image1d_array_t"}
+!7 = !{i32 1, i32 1, i32 1, i32 1, i32 1}
+!8 = !{!"none", !"read_only", !"read_only", !"read_only", !"read_only"}
+!9 = !{!"int*", !"image2d_t", !"image2d_depth_t", !"image2d_array_t", !"image2d_array_depth_t"}
+!10 = !{!"", !"", !"", !"", !""}
+!11 = !{!"int*", !"image2d_t", !"image2d_depth_t", !"image2d_array_t", !"image2d_array_depth_t"}
+!13 = !{i32 1, i32 1}
+!14 = !{!"none", !"read_only"}
+!15 = !{!"int*", !"image3d_t"}
+!16 = !{!"", !""}
+!17 = !{!"int*", !"image3d_t"}
 !18 = !{i32 1, i32 2}
 !19 = !{!"cl_khr_depth_images"}
 !20 = !{!"cl_images"}
@@ -280,9 +276,8 @@ attributes #1 = { nounwind readnone }
 !23 = !{!"int", !24}
 !24 = !{!"omnipotent char", !25}
 !25 = !{!"Simple C/C++ TBAA"}
-!26 = !{void (i32 addrspace(1)*, %opencl.image2d_array_depth_t addrspace(1)*)* @test_image2d_array_depth_t, !27, !28, !29, !30, !31}
-!27 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!28 = !{!"kernel_arg_access_qual", !"none", !"read_only"}
-!29 = !{!"kernel_arg_type", !"int*", !"image2d_array_depth_t"}
-!30 = !{!"kernel_arg_type_qual", !"", !""}
-!31 = !{!"kernel_arg_base_type", !"int*", !"image2d_array_depth_t"}
+!27 = !{i32 1, i32 1}
+!28 = !{!"none", !"read_only"}
+!29 = !{!"int*", !"image2d_array_depth_t"}
+!30 = !{!"", !""}
+!31 = !{!"int*", !"image2d_array_depth_t"}
diff --git a/test/transcoding/OpImageReadMS.ll b/test/transcoding/OpImageReadMS.ll
index 6e899a5..86a9dca 100644
--- a/test/transcoding/OpImageReadMS.ll
+++ b/test/transcoding/OpImageReadMS.ll
@@ -15,7 +15,7 @@ target triple = "spir-unknown-unknown"
 %opencl.image2d_msaa_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @sample_test(%opencl.image2d_msaa_t addrspace(1)* %source, i32 %sampler, <4 x float> addrspace(1)* nocapture %results) #0 {
+define spir_kernel void @sample_test(%opencl.image2d_msaa_t addrspace(1)* %source, i32 %sampler, <4 x float> addrspace(1)* nocapture %results) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func i32 @_Z13get_global_idj(i32 0) #2
   %call1 = tail call spir_func i32 @_Z13get_global_idj(i32 1) #2
@@ -64,7 +64,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -72,12 +71,11 @@ attributes #2 = { nounwind }
 !opencl.used.optional.core.features = !{!9}
 !opencl.compiler.options = !{!10}
 
-!0 = !{void (%opencl.image2d_msaa_t addrspace(1)*, i32, <4 x float> addrspace(1)*)* @sample_test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 0, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"image2d_msaa_t", !"sampler_t", !"float4*"}
-!4 = !{!"kernel_arg_base_type", !"image2d_msaa_t", !"sampler_t", !"float4*"}
-!5 = !{!"kernel_arg_type_qual", !"", !"", !""}
+!1 = !{i32 1, i32 0, i32 1}
+!2 = !{!"read_only", !"none", !"none"}
+!3 = !{!"image2d_msaa_t", !"sampler_t", !"float4*"}
+!4 = !{!"image2d_msaa_t", !"sampler_t", !"float4*"}
+!5 = !{!"", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{!"cl_khr_gl_msaa_sharing"}
diff --git a/test/transcoding/OpImageSampleExplicitLod.ll b/test/transcoding/OpImageSampleExplicitLod.ll
index 9c14547..2ceb8a6 100644
--- a/test/transcoding/OpImageSampleExplicitLod.ll
+++ b/test/transcoding/OpImageSampleExplicitLod.ll
@@ -17,7 +17,7 @@ target triple = "spir-unknown-unknown"
 %opencl.image2d_depth_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @sample_kernel(%opencl.image2d_depth_t addrspace(1)* %input, i32 %imageSampler, float addrspace(1)* %xOffsets, float addrspace(1)* %yOffsets, float addrspace(1)* %results) #0 {
+define spir_kernel void @sample_kernel(%opencl.image2d_depth_t addrspace(1)* %input, i32 %imageSampler, float addrspace(1)* %xOffsets, float addrspace(1)* %yOffsets, float addrspace(1)* %results) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
 entry:
   %call = call spir_func i32 @_Z13get_global_idj(i32 0) #1
   %call1 = call spir_func i32 @_Z13get_global_idj(i32 1) #1
@@ -51,19 +51,17 @@ declare spir_func <2 x i32> @_Z13get_image_dim16ocl_image2ddepth(%opencl.image2d
 attributes #0 = { nounwind }
 attributes #1 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
 !opencl.used.extensions = !{!7}
 !opencl.used.optional.core.features = !{!8}
 
-!0 = !{void (%opencl.image2d_depth_t addrspace(1)*, i32, float addrspace(1)*, float addrspace(1)*, float addrspace(1)*)* @sample_kernel, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 0, i32 1, i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"none", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"image2d_depth_t", !"sampler_t", !"float*", !"float*", !"float*"}
-!4 = !{!"kernel_arg_type_qual", !"", !"", !"", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"image2d_depth_t", !"sampler_t", !"float*", !"float*", !"float*"}
+!1 = !{i32 1, i32 0, i32 1, i32 1, i32 1}
+!2 = !{!"read_only", !"none", !"none", !"none", !"none"}
+!3 = !{!"image2d_depth_t", !"sampler_t", !"float*", !"float*", !"float*"}
+!4 = !{!"", !"", !"", !"", !""}
+!5 = !{!"image2d_depth_t", !"sampler_t", !"float*", !"float*", !"float*"}
 !6 = !{i32 2, i32 0}
 !7 = !{!"cl_khr_depth_images"}
 !8 = !{!"cl_images"}
diff --git a/test/transcoding/OpImageSampleExplicitLod_arg.ll b/test/transcoding/OpImageSampleExplicitLod_arg.ll
index ddb68cb..fef9fff 100644
--- a/test/transcoding/OpImageSampleExplicitLod_arg.ll
+++ b/test/transcoding/OpImageSampleExplicitLod_arg.ll
@@ -39,7 +39,7 @@ target triple = "spir-unknown-unknown"
 %opencl.image2d_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @sample_kernel_read(<4 x float> addrspace(1)* %results, %opencl.image2d_t addrspace(1)* %image, i32 %imageSampler, <2 x float> %coord, <2 x float> %dx, <2 x float> %dy) #0 {
+define spir_kernel void @sample_kernel_read(<4 x float> addrspace(1)* %results, %opencl.image2d_t addrspace(1)* %image, i32 %imageSampler, <2 x float> %coord, <2 x float> %dx, <2 x float> %dy) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = call spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_f(%opencl.image2d_t addrspace(1)* %image, i32 %imageSampler, <2 x float> %coord)
 ; CHECK-LLVM: call spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_f(%opencl.image2d_t addrspace(1)* %image, i32 %imageSampler, <2 x float> %coord)
@@ -65,7 +65,6 @@ declare spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv2_fDv2
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -73,12 +72,11 @@ attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "
 !opencl.used.optional.core.features = !{!9}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (<4 x float> addrspace(1)*, %opencl.image2d_t addrspace(1)*, i32, <2 x float>, <2 x float>, <2 x float>)* @sample_kernel_read, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 0, i32 0, i32 0, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"read_only", !"none", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"float4*", !"image2d_t", !"sampler_t", !"float2", !"float2", !"float2"}
-!4 = !{!"kernel_arg_base_type", !"float4*", !"image2d_t", !"sampler_t", !"float2", !"float2", !"float2"}
-!5 = !{!"kernel_arg_type_qual", !"", !"", !"", !"", !"", !""}
+!1 = !{i32 1, i32 1, i32 0, i32 0, i32 0, i32 0}
+!2 = !{!"none", !"read_only", !"none", !"none", !"none", !"none"}
+!3 = !{!"float4*", !"image2d_t", !"sampler_t", !"float2", !"float2", !"float2"}
+!4 = !{!"float4*", !"image2d_t", !"sampler_t", !"float2", !"float2", !"float2"}
+!5 = !{!"", !"", !"", !"", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/OpMemoryBarrier_cl12.ll b/test/transcoding/OpMemoryBarrier_cl12.ll
index 4ead0ab..a479857 100644
--- a/test/transcoding/OpMemoryBarrier_cl12.ll
+++ b/test/transcoding/OpMemoryBarrier_cl12.ll
@@ -32,7 +32,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test() #0 {
+define spir_kernel void @test() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
 entry:
   call spir_func void @_Z9mem_fencej(i32 2) ; global mem fence
   call spir_func void @_Z9mem_fencej(i32 1) ; local mem fence
@@ -49,21 +49,12 @@ declare spir_func void @_Z9mem_fencej(i32) #1
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!6}
-!opencl.used.extensions = !{!7}
-!opencl.used.optional.core.features = !{!7}
-!opencl.compiler.options = !{!7}
-!llvm.ident = !{!8}
-
-!0 = !{void ()* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{}
-!8 = !{!"clang version 3.6.2 "}
+!opencl.spir.version = !{!1}
+!opencl.ocl.version = !{!1}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
+!opencl.compiler.options = !{!0}
+
+!0 = !{}
+!1 = !{i32 1, i32 2}
diff --git a/test/transcoding/OpMemoryBarrier_cl20.ll b/test/transcoding/OpMemoryBarrier_cl20.ll
index 06fe6fe..6e0975a 100644
--- a/test/transcoding/OpMemoryBarrier_cl20.ll
+++ b/test/transcoding/OpMemoryBarrier_cl20.ll
@@ -52,7 +52,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test() #0 {
+define spir_kernel void @test() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
 entry:
   call spir_func void @_Z22atomic_work_item_fencejii(i32 2, i32 3, i32 0) ; global mem fence + memory_scope_work_item
   call spir_func void @_Z22atomic_work_item_fencejii(i32 2, i32 3, i32 1) ; global mem fence + memory_scope_work_group
@@ -76,22 +76,13 @@ declare spir_func void @_Z22atomic_work_item_fencejii(i32, i32, i32) #1
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!7}
-!opencl.used.extensions = !{!8}
-!opencl.used.optional.core.features = !{!8}
-!opencl.compiler.options = !{!8}
-!llvm.ident = !{!9}
-
-!0 = !{void ()* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{i32 2, i32 0}
-!8 = !{}
-!9 = !{!"clang version 3.6.2 "}
+!opencl.spir.version = !{!1}
+!opencl.ocl.version = !{!2}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
+!opencl.compiler.options = !{!0}
+
+!0 = !{}
+!1 = !{i32 1, i32 2}
+!2 = !{i32 2, i32 0}
diff --git a/test/transcoding/OpMin.ll b/test/transcoding/OpMin.ll
index 502d85d..0a3d897 100644
--- a/test/transcoding/OpMin.ll
+++ b/test/transcoding/OpMin.ll
@@ -17,7 +17,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test() #0 {
+define spir_kernel void @test() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
 entry:
   %call = tail call spir_func <2 x i32> @_Z3minDv2_ii(<2 x i32> <i32 1, i32 10>, i32 5) #2
   ret void
@@ -29,20 +29,13 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
-!opencl.spir.version = !{!6}
-!opencl.ocl.version = !{!7}
-!opencl.used.extensions = !{!8}
-!opencl.used.optional.core.features = !{!8}
-!opencl.compiler.options = !{!8}
-
-!0 = !{void ()* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_base_type"}
-!5 = !{!"kernel_arg_type_qual"}
-!6 = !{i32 1, i32 2}
-!7 = !{i32 2, i32 0}
-!8 = !{}
+!opencl.spir.version = !{!1}
+!opencl.ocl.version = !{!2}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
+!opencl.compiler.options = !{!0}
+
+!0 = !{}
+!1 = !{i32 1, i32 2}
+!2 = !{i32 2, i32 0}
diff --git a/test/transcoding/OpPhi_ArgumentsPlaceholders.ll b/test/transcoding/OpPhi_ArgumentsPlaceholders.ll
index 8666e44..ca40730 100644
--- a/test/transcoding/OpPhi_ArgumentsPlaceholders.ll
+++ b/test/transcoding/OpPhi_ArgumentsPlaceholders.ll
@@ -26,7 +26,7 @@ target triple = "spir"
 %struct.Node.0 = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @verify_linked_lists(%struct.Node addrspace(1)* %pNodes) #0 {
+define spir_kernel void @verify_linked_lists(%struct.Node addrspace(1)* %pNodes) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   br label %for.cond
 
@@ -46,7 +46,7 @@ for.body:                                         ; preds = %for.cond
 
   %0 = load %struct.Node.0 addrspace(1)*, %struct.Node.0 addrspace(1)* addrspace(1)* %pNext, align 4
   %1 = bitcast %struct.Node.0 addrspace(1)* %0 to %struct.Node addrspace(1)*
-;CHECK-SPIRV: Load {{[0-9]+}} [[LoadResultId:[0-9]+]] 
+;CHECK-SPIRV: Load {{[0-9]+}} [[LoadResultId:[0-9]+]]
 ;CHECK-SPIRV: Bitcast {{[0-9]+}} [[BitcastResultId]] [[LoadResultId]]
 ;CHECK-LLVM: [[LoadResult:%[0-9]+]] = load %struct.Node.0 addrspace(1)*, %struct.Node.0 addrspace(1)* addrspace(1)* {{.*}}
 ;CHECK-LLVM: [[BitcastResult]] = bitcast %struct.Node.0 addrspace(1)* [[LoadResult]] to %struct.Node addrspace(1)*
@@ -63,7 +63,6 @@ for.end:                                          ; preds = %for.cond
 
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -71,12 +70,11 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (%struct.Node addrspace(1)*)* @verify_linked_lists, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"Node*"}
-!4 = !{!"kernel_arg_base_type", !"struct __Node*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"Node*"}
+!4 = !{!"struct __Node*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/OpVariable_Initializer.ll b/test/transcoding/OpVariable_Initializer.ll
index dd109c0..09d88e5 100755
--- a/test/transcoding/OpVariable_Initializer.ll
+++ b/test/transcoding/OpVariable_Initializer.ll
@@ -16,29 +16,22 @@ target triple = "spir-unknown-unknown"
 @test_atomic_fn.L = internal addrspace(3) global [64 x i32] undef, align 4
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_atomic_fn() #0 {
+define spir_kernel void @test_atomic_fn() #0 !kernel_arg_addr_space !0 !kernel_arg_access_qual !0 !kernel_arg_type !0 !kernel_arg_base_type !0 !kernel_arg_type_qual !0 {
   ret void
 }
 
 attributes #0 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !spirv.Source = !{!6}
 !opencl.spir.version = !{!7}
 !opencl.ocl.version = !{!8}
-!opencl.used.extensions = !{!9}
-!opencl.used.optional.core.features = !{!9}
+!opencl.used.extensions = !{!0}
+!opencl.used.optional.core.features = !{!0}
 !spirv.Generator = !{!10}
 
-!0 = !{void ()* @test_atomic_fn, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space"}
-!2 = !{!"kernel_arg_access_qual"}
-!3 = !{!"kernel_arg_type"}
-!4 = !{!"kernel_arg_type_qual"}
-!5 = !{!"kernel_arg_base_type"}
+!0 = !{}
 !6 = !{i32 3, i32 100000}
 !7 = !{i32 1, i32 2}
 !8 = !{i32 1, i32 0}
-!9 = !{}
 !10 = !{i16 7, i16 0}
diff --git a/test/transcoding/RecursiveType.ll b/test/transcoding/RecursiveType.ll
index 2e8f0f7..b659bd2 100644
--- a/test/transcoding/RecursiveType.ll
+++ b/test/transcoding/RecursiveType.ll
@@ -29,13 +29,12 @@ target triple = "spir-unknown-unknown"
 ; CHECK-LLVM: %struct.Node = type { %struct.Node addrspace(1)*, i32 }
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(%struct.A addrspace(1)* %result, %struct.Node addrspace(1)* %node) #0 {
+define spir_kernel void @test(%struct.A addrspace(1)* %result, %struct.Node addrspace(1)* %node) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
   ret void
 }
 
 attributes #0 = { nounwind "less-precise-fpmad"="true" "no-frame-pointer-elim"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="true" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!7}
 !opencl.ocl.version = !{!8}
@@ -44,13 +43,12 @@ attributes #0 = { nounwind "less-precise-fpmad"="true" "no-frame-pointer-elim"="
 !opencl.compiler.options = !{!9}
 !llvm.ident = !{!10}
 
-!0 = !{void (%struct.A addrspace(1)*, %struct.Node addrspace(1)*)* @test, !1, !2, !3, !4, !5, !6}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"struct A*", !"struct Node*"}
-!4 = !{!"kernel_arg_base_type", !"struct A*", !"struct Node*"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
-!6 = !{!"kernel_arg_name", !"result", !"node"}
+!1 = !{i32 1, i32 1}
+!2 = !{!"none", !"none"}
+!3 = !{!"struct A*", !"struct Node*"}
+!4 = !{!"struct A*", !"struct Node*"}
+!5 = !{!"", !""}
+!6 = !{!"result", !"node"}
 !7 = !{i32 1, i32 2}
 !8 = !{i32 2, i32 0}
 !9 = !{}
diff --git a/test/transcoding/atomics_1.2.ll b/test/transcoding/atomics_1.2.ll
index 190bd1e..bbeed3b 100644
--- a/test/transcoding/atomics_1.2.ll
+++ b/test/transcoding/atomics_1.2.ll
@@ -14,7 +14,7 @@ target triple = "spir64-unknown-unknown"
 
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_atomic_global(i32 addrspace(1)* %dst) #0 {
+define spir_kernel void @test_atomic_global(i32 addrspace(1)* %dst) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
   ; atomic_inc
   %inc_ig = tail call spir_func i32 @_Z10atomic_incPVU3AS1i(i32 addrspace(1)* %dst) #0
   ; CHECK: _Z25atomic_fetch_add_explicitPU3AS1VU7_Atomicii12memory_order12memory_scope(i32 addrspace(1)* {{.*}}, i32 1
@@ -78,7 +78,7 @@ define spir_kernel void @test_atomic_global(i32 addrspace(1)* %dst) #0 {
 }
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_atomic_local(i32 addrspace(3)* %dst) #0 {
+define spir_kernel void @test_atomic_local(i32 addrspace(3)* %dst) #0 !kernel_arg_addr_space !11 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
   ; atomic_inc
   %inc_il = tail call spir_func i32 @_Z10atomic_incPVU3AS3i(i32 addrspace(3)* %dst) #0
   ; CHECK: _Z25atomic_fetch_add_explicitPU3AS3VU7_Atomicii12memory_order12memory_scope(i32 addrspace(3)* {{.*}}, i32 1
@@ -190,7 +190,6 @@ declare spir_func i32 @_Z11atomic_xchgPVU3AS3jj(i32 addrspace(3)*, i32)
 attributes #0 = { nounwind }
 attributes #1 = { nounwind readnone }
 
-!opencl.kernels = !{!0, !10}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!7}
 !opencl.ocl.version = !{!7}
@@ -198,15 +197,12 @@ attributes #1 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!9}
 
-!0 = !{void (i32 addrspace(1)*)* @test_atomic_global, !1, !2, !3, !4, !5, !6}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int*"}
-!4 = !{!"kernel_arg_type_qual", !"volatile"}
-!5 = !{!"kernel_arg_base_type", !"int*"}
-!6 = !{!"kernel_arg_name", !"dst"}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"int*"}
+!4 = !{!"volatile"}
+!5 = !{!"int*"}
 !7 = !{i32 1, i32 2}
 !8 = !{}
 !9 = !{!"-cl-kernel-arg-info"}
-!10 = !{void (i32 addrspace(3)*)* @test_atomic_local, !11, !2, !3, !4, !5, !6}
-!11 = !{!"kernel_arg_addr_space", i32 1}
+!11 = !{i32 1}
diff --git a/test/transcoding/bitcast.ll b/test/transcoding/bitcast.ll
index be7fa36..358d893 100644
--- a/test/transcoding/bitcast.ll
+++ b/test/transcoding/bitcast.ll
@@ -12,7 +12,7 @@ target triple = "spir64-unknown-unknown"
 ; CHECK: bitcast
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_fn(<2 x i8> addrspace(1)* nocapture readonly %src, i16 addrspace(1)* nocapture %dst) #0 {
+define spir_kernel void @test_fn(<2 x i8> addrspace(1)* nocapture readonly %src, i16 addrspace(1)* nocapture %dst) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
 entry:
   %call = tail call spir_func i64 @_Z13get_global_idj(i32 0) #2
   %sext = shl i64 %call, 32
@@ -32,7 +32,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -41,12 +40,11 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!7}
 !llvm.ident = !{!8}
 
-!0 = !{void (<2 x i8> addrspace(1)*, i16 addrspace(1)*)* @test_fn, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"char2*", !"short*"}
-!4 = !{!"kernel_arg_type_qual", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"char2*", !"short*"}
+!1 = !{i32 1, i32 1}
+!2 = !{!"none", !"none"}
+!3 = !{!"char2*", !"short*"}
+!4 = !{!"", !""}
+!5 = !{!"char2*", !"short*"}
 !6 = !{i32 2, i32 0}
 !7 = !{}
 !8 = !{!"clang version 3.4 "}
diff --git a/test/transcoding/check_ro_qualifier.ll b/test/transcoding/check_ro_qualifier.ll
index 027b194..2a9a9d7 100644
--- a/test/transcoding/check_ro_qualifier.ll
+++ b/test/transcoding/check_ro_qualifier.ll
@@ -24,7 +24,7 @@ target triple = "spir64-unknown-unknown"
 %opencl.image2d_array_ro_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @sample_kernel(%opencl.image2d_array_ro_t addrspace(1)* %input) #0 {
+define spir_kernel void @sample_kernel(%opencl.image2d_array_ro_t addrspace(1)* %input) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
 entry:
   %call.tmp1 = call spir_func <2 x i32> @_Z13get_image_dimPU3AS125opencl.image2d_array_ro_t(%opencl.image2d_array_ro_t addrspace(1)* %input)
   %call.tmp2 = shufflevector <2 x i32> %call.tmp1, <2 x i32> undef, <3 x i32> <i32 0, i32 1, i32 2>
@@ -43,7 +43,6 @@ declare spir_func i64 @_Z20get_image_array_sizePU3AS125opencl.image2d_array_ro_t
 
 attributes #0 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !spirv.Source = !{!6}
 !opencl.spir.version = !{!7}
@@ -52,12 +51,11 @@ attributes #0 = { nounwind }
 !opencl.used.optional.core.features = !{!9}
 !spirv.Generator = !{!10}
 
-!0 = !{void (%opencl.image2d_array_ro_t addrspace(1)*)* @sample_kernel, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only"}
-!3 = !{!"kernel_arg_type", !"image2d_array_ro_t"}
-!4 = !{!"kernel_arg_type_qual", !""}
-!5 = !{!"kernel_arg_base_type", !"image2d_array_ro_t"}
+!1 = !{i32 1}
+!2 = !{!"read_only"}
+!3 = !{!"image2d_array_ro_t"}
+!4 = !{!""}
+!5 = !{!"image2d_array_ro_t"}
 !6 = !{i32 3, i32 102000}
 !7 = !{i32 1, i32 2}
 !8 = !{}
diff --git a/test/transcoding/check_wo_qualifier.ll b/test/transcoding/check_wo_qualifier.ll
index 3978f32..9e25df8 100644
--- a/test/transcoding/check_wo_qualifier.ll
+++ b/test/transcoding/check_wo_qualifier.ll
@@ -23,7 +23,7 @@ target triple = "spir64-unknown-unknown"
 %opencl.image2d_array_wo_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @sample_kernel(%opencl.image2d_array_wo_t addrspace(1)* %input) #0 {
+define spir_kernel void @sample_kernel(%opencl.image2d_array_wo_t addrspace(1)* %input) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
 entry:
   %call.tmp1 = call spir_func <2 x i32> @_Z13get_image_dimPU3AS125opencl.image2d_array_wo_t(%opencl.image2d_array_wo_t addrspace(1)* %input)
   %call.tmp2 = shufflevector <2 x i32> %call.tmp1, <2 x i32> undef, <3 x i32> <i32 0, i32 1, i32 2>
@@ -42,7 +42,6 @@ declare spir_func i64 @_Z20get_image_array_sizePU3AS125opencl.image2d_array_wo_t
 
 attributes #0 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !spirv.Source = !{!6}
 !opencl.spir.version = !{!7}
@@ -51,12 +50,11 @@ attributes #0 = { nounwind }
 !opencl.used.optional.core.features = !{!9}
 !spirv.Generator = !{!10}
 
-!0 = !{void (%opencl.image2d_array_wo_t addrspace(1)*)* @sample_kernel, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"write_only"}
-!3 = !{!"kernel_arg_type", !"image2d_array_wo_t"}
-!4 = !{!"kernel_arg_type_qual", !""}
-!5 = !{!"kernel_arg_base_type", !"image2d_array_wo_t"}
+!1 = !{i32 1}
+!2 = !{!"write_only"}
+!3 = !{!"image2d_array_wo_t"}
+!4 = !{!""}
+!5 = !{!"image2d_array_wo_t"}
 !6 = !{i32 3, i32 102000}
 !7 = !{i32 1, i32 2}
 !8 = !{}
diff --git a/test/transcoding/cl-types.ll b/test/transcoding/cl-types.ll
index 73f7104..aac39f8 100644
--- a/test/transcoding/cl-types.ll
+++ b/test/transcoding/cl-types.ll
@@ -120,7 +120,6 @@ declare spir_func <4 x float> @_Z11read_imagef11ocl_image2d11ocl_samplerDv4_if(%
 
 attributes #0 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -133,7 +132,6 @@ attributes #0 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-point
 ; CHECK-LLVM-DAG: [[TYPE]] = !{!"pipe", !"pipe", !"image1d_t", !"image2d_t", !"image3d_t", !"image2d_array_t", !"image1d_buffer_t", !"image1d_t", !"image2d_t", !"sampler_t"}
 ; CHECK-LLVM-DAG: [[TQ]] = !{!"pipe", !"pipe", !"", !"", !"", !"", !"", !"", !"", !""}
 
-!0 = !{void (%opencl.pipe_ro_t addrspace(1)*, %opencl.pipe_wo_t addrspace(1)*, %opencl.image1d_t addrspace(1)*, %opencl.image2d_t addrspace(1)*, %opencl.image3d_t addrspace(1)*, %opencl.image2d_array_t addrspace(1)*, %opencl.image1d_buffer_t addrspace(1)*, %opencl.image1d_t addrspace(1)*, %opencl.image2d_t addrspace(1)*, i32)* @foo, !1, !2, !3, !4, !5}
 !1 = !{i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0}
 !2 = !{!"read_only", !"write_only", !"read_only", !"read_only", !"read_only", !"read_only", !"read_only", !"write_only", !"read_write", !"none"}
 !3 = !{!"int", !"int", !"image1d_t", !"image2d_t", !"image3d_t", !"image2d_array_t", !"image1d_buffer_t", !"image1d_t", !"image2d_t", !"sampler_t"}
diff --git a/test/transcoding/cl_intel_sub_groups.ll b/test/transcoding/cl_intel_sub_groups.ll
index edf4945..1c95d89 100644
--- a/test/transcoding/cl_intel_sub_groups.ll
+++ b/test/transcoding/cl_intel_sub_groups.ll
@@ -51,7 +51,7 @@ target triple = "spir64"
 %opencl.image2d_wo_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(<2 x float> %x, i32 %c, %opencl.image2d_ro_t addrspace(1)* %image_in, %opencl.image2d_wo_t addrspace(1)* %image_out, <2 x i32> %coord, i32 addrspace(1)* %p, i16 addrspace(1)* %sp) #0 {
+define spir_kernel void @test(<2 x float> %x, i32 %c, %opencl.image2d_ro_t addrspace(1)* %image_in, %opencl.image2d_wo_t addrspace(1)* %image_out, <2 x i32> %coord, i32 addrspace(1)* %p, i16 addrspace(1)* %sp) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func <2 x float> @_Z23intel_sub_group_shuffleDv2_fj(<2 x float> %x, i32 %c) #3
   %call1 = tail call spir_func <2 x float> @_Z28intel_sub_group_shuffle_downDv2_fDv2_fj(<2 x float> %x, <2 x float> %x, i32 %c) #3
@@ -106,7 +106,6 @@ attributes #2 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-point
 attributes #3 = { nounwind }
 attributes #4 = { nounwind readonly }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -114,12 +113,11 @@ attributes #4 = { nounwind readonly }
 !opencl.used.optional.core.features = !{!9}
 !opencl.compiler.options = !{!9}
 
-!0 = !{void (<2 x float>, i32, %opencl.image2d_ro_t addrspace(1)*, %opencl.image2d_wo_t addrspace(1)*, <2 x i32>, i32 addrspace(1)*, i16 addrspace(1)*)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 0, i32 0, i32 1, i32 1, i32 0, i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"read_only", !"write_only", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"float2", !"uint", !"__read_only image2d_t", !"__write_only image2d_t", !"int2", !"uint*", !"ushort*"}
-!4 = !{!"kernel_arg_base_type", !"float2", !"uint", !"__read_only image2d_t", !"__write_only image2d_t", !"int2", !"uint*", !"ushort*"}
-!5 = !{!"kernel_arg_type_qual", !"", !"", !"", !"", !"", !"", !""}
+!1 = !{i32 0, i32 0, i32 1, i32 1, i32 0, i32 1, i32 1}
+!2 = !{!"none", !"none", !"read_only", !"write_only", !"none", !"none", !"none"}
+!3 = !{!"float2", !"uint", !"__read_only image2d_t", !"__write_only image2d_t", !"int2", !"uint*", !"ushort*"}
+!4 = !{!"float2", !"uint", !"__read_only image2d_t", !"__write_only image2d_t", !"int2", !"uint*", !"ushort*"}
+!5 = !{!"", !"", !"", !"", !"", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{!"cl_intel_subgroups", !"cl_intel_subgroups_short"}
diff --git a/test/transcoding/fclamp.ll b/test/transcoding/fclamp.ll
index 67193eb..a809196 100644
--- a/test/transcoding/fclamp.ll
+++ b/test/transcoding/fclamp.ll
@@ -15,7 +15,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_scalar(float addrspace(1)* nocapture readonly %f) #0 {
+define spir_kernel void @test_scalar(float addrspace(1)* nocapture readonly %f) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %0 = load float, float addrspace(1)* %f, align 4
   %call = tail call spir_func float @_Z5clampfff(float %0, float 0.000000e+00, float 1.000000e+00) #2
@@ -33,7 +33,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -41,12 +40,11 @@ attributes #2 = { nounwind }
 !opencl.used.optional.core.features = !{!9}
 !opencl.compiler.options = !{!9}
 
-!0 = !{void (float addrspace(1)*)* @test_scalar, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"float*"}
-!4 = !{!"kernel_arg_base_type", !"float*"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"none"}
+!3 = !{!"float*"}
+!4 = !{!"float*"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{!"cl_khr_fp16"}
diff --git a/test/transcoding/image_channel.ll b/test/transcoding/image_channel.ll
index e10697b..e94b6c2 100644
--- a/test/transcoding/image_channel.ll
+++ b/test/transcoding/image_channel.ll
@@ -11,10 +11,10 @@ target triple = "spir-unknown-unknown"
 
 %opencl.image2d_t = type opaque
 ; CHECK-SPIRV-DAG: 4 Constant {{[0-9]+}} [[DataTypeOffsetId:[0-9]+]] 4304
-; CHECK-SPIRV-DAG: 4 Constant {{[0-9]+}} [[OrderOffsetId:[0-9]+]] 4272 
+; CHECK-SPIRV-DAG: 4 Constant {{[0-9]+}} [[OrderOffsetId:[0-9]+]] 4272
 
 ; Function Attrs: nounwind
-define spir_kernel void @f(%opencl.image2d_t addrspace(1)* %img, i32 addrspace(1)* nocapture %type, i32 addrspace(1)* nocapture %order) #0 {
+define spir_kernel void @f(%opencl.image2d_t addrspace(1)* %img, i32 addrspace(1)* nocapture %type, i32 addrspace(1)* nocapture %order) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 ; CHECK-LLVM-DAG: [[DTCALL:%.+]] ={{.*}} call spir_func i32 @_Z27get_image_channel_data_type11ocl_image2d
 ; CHECK-LLVM: [[DTSUB:%.+]] = sub i32 [[DTCALL]], 4304
 ; CHECK-LLVM: [[DTADD:%.+]] = add i32 [[DTSUB]], 4304
@@ -44,19 +44,17 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
 !opencl.used.extensions = !{!8}
 !opencl.used.optional.core.features = !{!9}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (%opencl.image2d_t addrspace(1)*, i32 addrspace(1)*, i32 addrspace(1)*)* @f, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"image2d_t", !"int*", !"int*"}
-!4 = !{!"kernel_arg_base_type", !"image2d_t", !"int*", !"int*"}
-!5 = !{!"kernel_arg_type_qual", !"", !"", !""}
+!1 = !{i32 1, i32 1, i32 1}
+!2 = !{!"read_only", !"none", !"none"}
+!3 = !{!"image2d_t", !"int*", !"int*"}
+!4 = !{!"image2d_t", !"int*", !"int*"}
+!5 = !{!"", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/image_get_size_with_access_qualifiers.ll b/test/transcoding/image_get_size_with_access_qualifiers.ll
index ad89d0d..b7e0cf8 100644
--- a/test/transcoding/image_get_size_with_access_qualifiers.ll
+++ b/test/transcoding/image_get_size_with_access_qualifiers.ll
@@ -20,7 +20,7 @@ target triple = "spir64"
 %opencl.image2d_array_ro_t = type opaque
 
 ; Function Attrs: nounwind
-define spir_kernel void @sample_kernel(%opencl.image2d_array_ro_t addrspace(1)* %input) #0 {
+define spir_kernel void @sample_kernel(%opencl.image2d_array_ro_t addrspace(1)* %input) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = call spir_func i32 @_Z15get_image_width20ocl_image2d_array_ro(%opencl.image2d_array_ro_t addrspace(1)* %input) #2
   ret void
@@ -33,7 +33,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -42,12 +41,11 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!7}
 !llvm.ident = !{!8}
 
-!0 = !{void (%opencl.image2d_array_ro_t addrspace(1)*)* @sample_kernel, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only"}
-!3 = !{!"kernel_arg_type", !"__read_only image2d_array_t"}
-!4 = !{!"kernel_arg_base_type", !"__read_only image2d_array_t"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"read_only"}
+!3 = !{!"__read_only image2d_array_t"}
+!4 = !{!"__read_only image2d_array_t"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{}
 !8 = !{!"clang version 3.6.1 "}
diff --git a/test/transcoding/isequal.ll b/test/transcoding/isequal.ll
index 7038dd5..dda7373 100644
--- a/test/transcoding/isequal.ll
+++ b/test/transcoding/isequal.ll
@@ -14,7 +14,7 @@ target triple = "spir64-unknown-unknown"
 ; CHECK-LLVM-NOT: call {{.*}} @_Z{{[0-9]*}}convert
 
 ; Function Attrs: nounwind
-define spir_kernel void @math_kernel8(<8 x i32> addrspace(1)* nocapture %out, <8 x float> addrspace(1)* nocapture readonly %in1, <8 x float> addrspace(1)* nocapture readonly %in2) #0 {
+define spir_kernel void @math_kernel8(<8 x i32> addrspace(1)* nocapture %out, <8 x float> addrspace(1)* nocapture readonly %in1, <8 x float> addrspace(1)* nocapture readonly %in2) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
 entry:
   %call = tail call spir_func i64 @_Z13get_global_idj(i32 0) #2
   %sext = shl i64 %call, 32
@@ -39,7 +39,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -48,12 +47,11 @@ attributes #2 = { nounwind readnone }
 !opencl.compiler.options = !{!7}
 !llvm.ident = !{!8}
 
-!0 = !{void (<8 x i32> addrspace(1)*, <8 x float> addrspace(1)*, <8 x float> addrspace(1)*)* @math_kernel8, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"int8*", !"float8*", !"float8*"}
-!4 = !{!"kernel_arg_type_qual", !"", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"int8*", !"float8*", !"float8*"}
+!1 = !{i32 1, i32 1, i32 1}
+!2 = !{!"none", !"none", !"none"}
+!3 = !{!"int8*", !"float8*", !"float8*"}
+!4 = !{!"", !"", !""}
+!5 = !{!"int8*", !"float8*", !"float8*"}
 !6 = !{i32 2, i32 0}
 !7 = !{}
 !8 = !{!"clang version 3.4 "}
diff --git a/test/transcoding/llvm.memmove.ll b/test/transcoding/llvm.memmove.ll
index e565d23..e935fae 100644
--- a/test/transcoding/llvm.memmove.ll
+++ b/test/transcoding/llvm.memmove.ll
@@ -36,7 +36,7 @@ target triple = "spir-unknown-unknown"
 %struct.SomeStruct = type { <16 x float>, i32, [60 x i8] }
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_struct(%struct.SomeStruct addrspace(1)* nocapture readonly %in, %struct.SomeStruct addrspace(1)* nocapture %out) #0 {
+define spir_kernel void @test_struct(%struct.SomeStruct addrspace(1)* nocapture readonly %in, %struct.SomeStruct addrspace(1)* nocapture %out) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
   %1 = bitcast %struct.SomeStruct addrspace(1)* %in to i8 addrspace(1)*
   %2 = bitcast %struct.SomeStruct addrspace(1)* %out to i8 addrspace(1)*
   call void @llvm.memmove.p1i8.p1i8.i32(i8 addrspace(1)* %2, i8 addrspace(1)* %1, i32 128, i32 64, i1 false)
@@ -49,22 +49,17 @@ declare void @llvm.memmove.p1i8.p1i8.i32(i8 addrspace(1)* nocapture, i8 addrspac
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #1 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!7}
 !opencl.ocl.version = !{!7}
 !opencl.used.extensions = !{!8}
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!8}
-!llvm.ident = !{!9}
 
-!0 = !{void (%struct.SomeStruct addrspace(1)*, %struct.SomeStruct addrspace(1)*)* @test_struct, !1, !2, !3, !4, !5, !6}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"struct SomeStruct*", !"struct SomeStruct*"}
-!4 = !{!"kernel_arg_base_type", !"struct SomeStruct*", !"struct SomeStruct*"}
-!5 = !{!"kernel_arg_type_qual", !"const", !""}
-!6 = !{!"kernel_arg_name", !"in", !"out"}
+!1 = !{i32 1, i32 1}
+!2 = !{!"none", !"none"}
+!3 = !{!"struct SomeStruct*", !"struct SomeStruct*"}
+!4 = !{!"struct SomeStruct*", !"struct SomeStruct*"}
+!5 = !{!"const", !""}
 !7 = !{i32 1, i32 2}
 !8 = !{}
-!9 = !{!"clang version 3.6.1 (https://github.com/KhronosGroup/SPIR d7e44c3b27581e54ca0e522987d1ade2bd29b70d) (https://github.com/KhronosGroup/SPIRV-LLVM.git d42743684ea8338358504e44ef8363b9dc675c66)"}
diff --git a/test/transcoding/optional-core-features-multiple.ll b/test/transcoding/optional-core-features-multiple.ll
index 2efabcf..18588ee 100644
--- a/test/transcoding/optional-core-features-multiple.ll
+++ b/test/transcoding/optional-core-features-multiple.ll
@@ -19,14 +19,13 @@ target triple = "spir-unknown-unknown"
 @d = addrspace(1) global double 1.000000e+00, align 8
 
 ; Function Attrs: nounwind readnone
-define spir_kernel void @test(%opencl.image2d_t addrspace(1)* nocapture %img) #0 {
+define spir_kernel void @test(%opencl.image2d_t addrspace(1)* nocapture %img) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   ret void
 }
 
 attributes #0 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -34,17 +33,16 @@ attributes #0 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!9}
 !opencl.compiler.options = !{!8}
 
-!0 = !{void (%opencl.image2d_t addrspace(1)*)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only"}
-!3 = !{!"kernel_arg_type", !"image2d_t"}
-!4 = !{!"kernel_arg_base_type", !"image2d_t"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 1}
+!2 = !{!"read_only"}
+!3 = !{!"image2d_t"}
+!4 = !{!"image2d_t"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
 !9 = !{!"cl_doubles", !"cl_images"}
-; CHECK-SPIRV: 2 Capability Float64 
-; CHECK-SPIRV: 2 Capability ImageBasic 
+; CHECK-SPIRV: 2 Capability Float64
+; CHECK-SPIRV: 2 Capability ImageBasic
 ; CHECK-LLVM: {{.*}} !{!"cl_doubles", !"cl_images"}
 ; CHECK-LLVM-NOT: {{.*}} !{!"cl_doubles cl_images"}
diff --git a/test/transcoding/relationals.ll b/test/transcoding/relationals.ll
index 1f98cbc..5f13edf 100644
--- a/test/transcoding/relationals.ll
+++ b/test/transcoding/relationals.ll
@@ -34,7 +34,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_scalar(i32 addrspace(1)* nocapture %out, float %f) #0 {
+define spir_kernel void @test_scalar(i32 addrspace(1)* nocapture %out, float %f) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func i32 @_Z8isfinitef(float %f) #2
   %call1 = tail call spir_func i32 @_Z5isnanf(float %f) #2
@@ -60,7 +60,7 @@ declare spir_func i32 @_Z8isnormalf(float) #1
 declare spir_func i32 @_Z7signbitf(float) #1
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_vector(<2 x i32> addrspace(1)* nocapture %out, <2 x float> %f) #0 {
+define spir_kernel void @test_vector(<2 x i32> addrspace(1)* nocapture %out, <2 x float> %f) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !7 !kernel_arg_base_type !8 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func <2 x i32> @_Z8isfiniteDv2_f(<2 x float> %f) #2
   %call1 = tail call spir_func <2 x i32> @_Z5isnanDv2_f(<2 x float> %f) #2
@@ -85,7 +85,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0, !6}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!9}
 !opencl.ocl.version = !{!10}
@@ -93,15 +92,13 @@ attributes #2 = { nounwind }
 !opencl.used.optional.core.features = !{!11}
 !opencl.compiler.options = !{!11}
 
-!0 = !{void (i32 addrspace(1)*, float)* @test_scalar, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"int*", !"float"}
-!4 = !{!"kernel_arg_base_type", !"int*", !"float"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
-!6 = !{void (<2 x i32> addrspace(1)*, <2 x float>)* @test_vector, !1, !2, !7, !8, !5}
-!7 = !{!"kernel_arg_type", !"int2*", !"float2"}
-!8 = !{!"kernel_arg_base_type", !"int2*", !"float2"}
+!1 = !{i32 1, i32 0}
+!2 = !{!"none", !"none"}
+!3 = !{!"int*", !"float"}
+!4 = !{!"int*", !"float"}
+!5 = !{!"", !""}
+!7 = !{!"int2*", !"float2"}
+!8 = !{!"int2*", !"float2"}
 !9 = !{i32 1, i32 2}
 !10 = !{i32 2, i32 0}
 !11 = !{}
diff --git a/test/transcoding/relationals_double.ll b/test/transcoding/relationals_double.ll
index a08f610..b32ef25 100644
--- a/test/transcoding/relationals_double.ll
+++ b/test/transcoding/relationals_double.ll
@@ -22,7 +22,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_vector_double(<2 x i64> addrspace(1)* nocapture %out, <2 x double> %in) #0 {
+define spir_kernel void @test_vector_double(<2 x i64> addrspace(1)* nocapture %out, <2 x double> %in) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
   %1 = tail call spir_func <2 x i64> @_Z5isinfDv2_d(<2 x double> %in) #2
   %2 = tail call spir_func <2 x i64> @_Z5isnanDv2_d(<2 x double> %in) #2
   %3 = add <2 x i64> %1, %2
@@ -46,7 +46,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -55,12 +54,11 @@ attributes #2 = { nounwind }
 !opencl.compiler.options = !{!8}
 !llvm.ident = !{!10}
 
-!0 = !{void (<2 x i64> addrspace(1)*, <2 x double>)* @test_vector_double, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"long2*", !"double2"}
-!4 = !{!"kernel_arg_base_type", !"long2*", !"double2"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
+!1 = !{i32 1, i32 0}
+!2 = !{!"none", !"none"}
+!3 = !{!"long2*", !"double2"}
+!4 = !{!"long2*", !"double2"}
+!5 = !{!"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{}
diff --git a/test/transcoding/relationals_half.ll b/test/transcoding/relationals_half.ll
index 5d524c9..5bc2022 100644
--- a/test/transcoding/relationals_half.ll
+++ b/test/transcoding/relationals_half.ll
@@ -34,7 +34,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_scalar(i32 addrspace(1)* nocapture %out, half %f) #0 {
+define spir_kernel void @test_scalar(i32 addrspace(1)* nocapture %out, half %f) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func i32 @_Z8isfiniteDh(half %f) #2
   %call1 = tail call spir_func i32 @_Z5isnanDh(half %f) #2
@@ -60,7 +60,7 @@ declare spir_func i32 @_Z8isnormalDh(half) #1
 declare spir_func i32 @_Z7signbitDh(half) #1
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_vector(<2 x i16> addrspace(1)* nocapture %out, <2 x half> %f) #0 {
+define spir_kernel void @test_vector(<2 x i16> addrspace(1)* nocapture %out, <2 x half> %f) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !7 !kernel_arg_base_type !8 !kernel_arg_type_qual !5 {
 entry:
   %call = tail call spir_func <2 x i16> @_Z8isfiniteDv2_Dh(<2 x half> %f) #2
   %call1 = tail call spir_func <2 x i16> @_Z5isnanDv2_Dh(<2 x half> %f) #2
@@ -85,7 +85,6 @@ attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"=
 attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 attributes #2 = { nounwind }
 
-!opencl.kernels = !{!0, !6}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!9}
 !opencl.ocl.version = !{!10}
@@ -93,15 +92,13 @@ attributes #2 = { nounwind }
 !opencl.used.optional.core.features = !{!11}
 !opencl.compiler.options = !{!11}
 
-!0 = !{void (i32 addrspace(1)*, half)* @test_scalar, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"int*", !"half"}
-!4 = !{!"kernel_arg_base_type", !"int*", !"half"}
-!5 = !{!"kernel_arg_type_qual", !"", !""}
-!6 = !{void (<2 x i16> addrspace(1)*, <2 x half>)* @test_vector, !1, !2, !7, !8, !5}
-!7 = !{!"kernel_arg_type", !"short2*", !"half2"}
-!8 = !{!"kernel_arg_base_type", !"short2*", !"half2"}
+!1 = !{i32 1, i32 0}
+!2 = !{!"none", !"none"}
+!3 = !{!"int*", !"half"}
+!4 = !{!"int*", !"half"}
+!5 = !{!"", !""}
+!7 = !{!"short2*", !"half2"}
+!8 = !{!"short2*", !"half2"}
 !9 = !{i32 1, i32 2}
 !10 = !{i32 2, i32 0}
 !11 = !{}
diff --git a/test/transcoding/spirv-types.ll b/test/transcoding/spirv-types.ll
index 5339d5e..5bb7a0a 100644
--- a/test/transcoding/spirv-types.ll
+++ b/test/transcoding/spirv-types.ll
@@ -109,7 +109,7 @@ define spir_kernel void @foo(
   %spirv.Image._half_1_0_1_0_0_0_0 addrspace(1)* nocapture %f1,
   %spirv.Image._float_5_0_0_0_0_0_0 addrspace(1)* nocapture %g1,
   %spirv.Image._void_0_0_0_0_0_0_1 addrspace(1)* nocapture %c2,
-  %spirv.Image._void_1_0_0_0_0_0_2 addrspace(1)* nocapture %d3) #0 {
+  %spirv.Image._void_1_0_0_0_0_0_2 addrspace(1)* nocapture %d3) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 entry:
   ret void
 }
@@ -158,7 +158,6 @@ declare spir_func <4 x float> @_Z38__spirv_ImageSampleExplicitLod_Rfloat4PU3AS12
 
 attributes #0 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!7}
@@ -171,12 +170,11 @@ attributes #0 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-point
 ; CHECK-LLVM-DAG: [[TYPE]] = !{!"pipe", !"pipe", !"image1d_t", !"image2d_t", !"image3d_t", !"image2d_array_t", !"image1d_buffer_t", !"image1d_t", !"image2d_t"}
 ; CHECK-LLVM-DAG: [[TQ]] = !{!"pipe", !"pipe", !"", !"", !"", !"", !"", !"", !""}
 
-!0 = !{void (%spirv.Pipe._0 addrspace(1)*, %spirv.Pipe._1 addrspace(1)*, %spirv.Image._void_0_0_0_0_0_0_0 addrspace(1)*, %spirv.Image._int_1_0_0_0_0_0_0 addrspace(1)*, %spirv.Image._uint_2_0_0_0_0_0_0 addrspace(1)*, %spirv.Image._half_1_0_1_0_0_0_0 addrspace(1)*, %spirv.Image._float_5_0_0_0_0_0_0 addrspace(1)*, %spirv.Image._void_0_0_0_0_0_0_1 addrspace(1)*, %spirv.Image._void_1_0_0_0_0_0_2 addrspace(1)*)* @foo, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"read_only", !"write_only", !"read_only", !"read_only", !"read_only", !"read_only", !"read_only", !"write_only", !"read_write"}
-!3 = !{!"kernel_arg_type", !"int", !"int", !"image1d_t", !"image2d_t", !"image3d_t", !"image2d_array_t", !"image1d_buffer_t", !"image1d_t", !"image2d_t"}
-!4 = !{!"kernel_arg_base_type", !"int", !"int", !"image1d_t", !"image2d_t", !"image3d_t", !"image2d_array_t", !"image1d_buffer_t", !"image1d_t", !"image2d_t"}
-!5 = !{!"kernel_arg_type_qual", !"pipe", !"pipe", !"", !"", !"", !"", !"", !"", !""}
+!1 = !{i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1}
+!2 = !{!"read_only", !"write_only", !"read_only", !"read_only", !"read_only", !"read_only", !"read_only", !"write_only", !"read_write"}
+!3 = !{!"int", !"int", !"image1d_t", !"image2d_t", !"image3d_t", !"image2d_array_t", !"image1d_buffer_t", !"image1d_t", !"image2d_t"}
+!4 = !{!"int", !"int", !"image1d_t", !"image2d_t", !"image3d_t", !"image2d_array_t", !"image1d_buffer_t", !"image1d_t", !"image2d_t"}
+!5 = !{!"pipe", !"pipe", !"", !"", !"", !"", !"", !"", !""}
 !6 = !{i32 1, i32 2}
 !7 = !{i32 2, i32 0}
 !8 = !{!"cl_khr_fp16"}
diff --git a/test/transcoding/vec8.ll b/test/transcoding/vec8.ll
index e697c0f..e25dc3e 100644
--- a/test/transcoding/vec8.ll
+++ b/test/transcoding/vec8.ll
@@ -16,7 +16,7 @@ target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:2
 target triple = "spir"
 
 ; Function Attrs: nounwind
-define spir_kernel void @test(<8 x i32> %v) #0 {
+define spir_kernel void @test(<8 x i32> %v) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !4 !kernel_arg_type_qual !5 {
 ; CHECK-LLVM: <8 x i32>
   %1 = alloca <8 x i32>, align 32
   store <8 x i32> %v, <8 x i32>* %1, align 32
@@ -25,21 +25,17 @@ define spir_kernel void @test(<8 x i32> %v) #0 {
 
 attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-realign-stack" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
 !opencl.used.extensions = !{!7}
 !opencl.used.optional.core.features = !{!7}
 !opencl.compiler.options = !{!7}
-!llvm.ident = !{!8}
 
-!0 = !{void (<8 x i32>)* @test, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none"}
-!3 = !{!"kernel_arg_type", !"int8"}
-!4 = !{!"kernel_arg_base_type", !"int8"}
-!5 = !{!"kernel_arg_type_qual", !""}
+!1 = !{i32 0}
+!2 = !{!"none"}
+!3 = !{!"int8"}
+!4 = !{!"int8"}
+!5 = !{!""}
 !6 = !{i32 1, i32 2}
 !7 = !{}
-!8 = !{!"clang version 3.6.1 (https://github.com/KhronosGroup/SPIR 2b577882b436ba3133457f27e0aa999f2ac8b11c) (https://github.com/KhronosGroup/SPIRV-LLVM.git 44ec76519179879c7900a5da4e724c751ce516a9)"}
diff --git a/test/transcoding/vector_casts.ll b/test/transcoding/vector_casts.ll
index 9a63b46..f6f0f6f 100644
--- a/test/transcoding/vector_casts.ll
+++ b/test/transcoding/vector_casts.ll
@@ -21,7 +21,7 @@ target triple = "spir64-unknown-unknown"
 ; CHECK:    call spir_func <8 x i32> @_Z12convert_int8Dv8_f(<8 x float>
 
 ; Function Attrs: nounwind
-define spir_kernel void @test_default_conversions(<8 x double> addrspace(1)* nocapture %out, <8 x i8> %in) #0 {
+define spir_kernel void @test_default_conversions(<8 x double> addrspace(1)* nocapture %out, <8 x i8> %in) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
   %1 = tail call spir_func <8 x i16> @_Z15convert_ushort8Dv8_c(<8 x i8> %in) #1
   %2 = tail call spir_func <8 x i32> @_Z12convert_int8Dv8_t(<8 x i16> %1) #1
   %3 = tail call spir_func <8 x i8> @_Z13convert_char8Dv8_i(<8 x i32> %2) #1
@@ -69,7 +69,6 @@ declare spir_func <8 x double> @_Z15convert_double8Dv8_i(<8 x i32>) #1
 attributes #0 = { nounwind }
 attributes #1 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !opencl.spir.version = !{!6}
 !opencl.ocl.version = !{!6}
@@ -77,12 +76,11 @@ attributes #1 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!8}
 !opencl.compiler.options = !{!7}
 
-!0 = !{void (<8 x double> addrspace(1)*, <8 x i8>)* @test_default_conversions, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 0}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"double8*", !"char8"}
-!4 = !{!"kernel_arg_type_qual", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"double8*", !"char8"}
+!1 = !{i32 1, i32 0}
+!2 = !{!"none", !"none"}
+!3 = !{!"double8*", !"char8"}
+!4 = !{!"", !""}
+!5 = !{!"double8*", !"char8"}
 !6 = !{i32 1, i32 2}
 !7 = !{}
 !8 = !{!"cl_doubles"}
diff --git a/test/unreachable.ll b/test/unreachable.ll
index 60b9db8..76f21b4 100644
--- a/test/unreachable.ll
+++ b/test/unreachable.ll
@@ -13,7 +13,7 @@ target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:
 target triple = "spir64-unknown-unknown"
 
 ; Function Attrs: nounwind
-define spir_kernel void @unreachable_simple(i32 addrspace(1)* nocapture %in, i32 addrspace(1)* %out) #0 {
+define spir_kernel void @unreachable_simple(i32 addrspace(1)* nocapture %in, i32 addrspace(1)* %out) #0 !kernel_arg_addr_space !1 !kernel_arg_access_qual !2 !kernel_arg_type !3 !kernel_arg_base_type !5 !kernel_arg_type_qual !4 {
   %1 = call spir_func i64 @_Z13get_global_idj(i32 0) #1
   %2 = shl i64 %1, 32
   %3 = ashr exact i64 %2, 32
@@ -35,7 +35,6 @@ declare spir_func i64 @_Z13get_global_idj(i32) #1
 attributes #0 = { nounwind }
 attributes #1 = { nounwind readnone }
 
-!opencl.kernels = !{!0}
 !opencl.enable.FP_CONTRACT = !{}
 !spirv.Source = !{!6}
 !opencl.spir.version = !{!7}
@@ -44,12 +43,11 @@ attributes #1 = { nounwind readnone }
 !opencl.used.optional.core.features = !{!8}
 !spirv.Generator = !{!9}
 
-!0 = !{void (i32 addrspace(1)*, i32 addrspace(1)*)* @unreachable_simple, !1, !2, !3, !4, !5}
-!1 = !{!"kernel_arg_addr_space", i32 1, i32 1}
-!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
-!3 = !{!"kernel_arg_type", !"int*", !"int*"}
-!4 = !{!"kernel_arg_type_qual", !"", !""}
-!5 = !{!"kernel_arg_base_type", !"int*", !"int*"}
+!1 = !{i32 1, i32 1}
+!2 = !{!"none", !"none"}
+!3 = !{!"int*", !"int*"}
+!4 = !{!"", !""}
+!5 = !{!"int*", !"int*"}
 !6 = !{i32 3, i32 102000}
 !7 = !{i32 1, i32 2}
 !8 = !{}
-- 
1.8.3.1

