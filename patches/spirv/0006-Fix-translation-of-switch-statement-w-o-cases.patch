From b83dd3f0734d1e6d2109d2b77d45f1a4bc65c2ad Mon Sep 17 00:00:00 2001
From: Alexey Sotkin <alexey.sotkin@intel.com>
Date: Wed, 26 Sep 2018 20:28:48 +0300
Subject: [PATCH 6/9] Fix translation of switch statement w/o cases

---
 lib/SPIRV/libSPIRV/SPIRVInstruction.h   | 10 ++++---
 test/SPIRV/transcoding/OpSwitchEmpty.ll | 49 +++++++++++++++++++++++++++++++++
 2 files changed, 55 insertions(+), 4 deletions(-)
 create mode 100644 test/SPIRV/transcoding/OpSwitchEmpty.ll

diff --git a/lib/SPIRV/libSPIRV/SPIRVInstruction.h b/lib/SPIRV/libSPIRV/SPIRVInstruction.h
index aade5c9..98ea94b 100644
--- a/lib/SPIRV/libSPIRV/SPIRVInstruction.h
+++ b/lib/SPIRV/libSPIRV/SPIRVInstruction.h
@@ -1036,10 +1036,12 @@ public:
 
   SPIRVSwitch(SPIRVValue *TheSelect, SPIRVBasicBlock *TheDefault,
               const std::vector<PairTy> &ThePairs, SPIRVBasicBlock *BB)
-      : SPIRVInstruction(ThePairs.size() * (ThePairs.at(0).first.size() + 1) +
-                             FixedWordCount,
-                         OC, BB),
-        Select(TheSelect->getId()), Default(TheDefault->getId()) {
+      : SPIRVInstruction(FixedWordCount, OC, BB), Select(TheSelect->getId()),
+        Default(TheDefault->getId()) {
+
+    if (!ThePairs.empty())
+      SPIRVEntry::setWordCount(
+          ThePairs.size() * (ThePairs.at(0).first.size() + 1) + FixedWordCount);
 
     for (auto &I : ThePairs) {
       for (auto &U : I.first)
diff --git a/test/SPIRV/transcoding/OpSwitchEmpty.ll b/test/SPIRV/transcoding/OpSwitchEmpty.ll
new file mode 100644
index 0000000..db2f942
--- /dev/null
+++ b/test/SPIRV/transcoding/OpSwitchEmpty.ll
@@ -0,0 +1,49 @@
+; Source:
+; void kk(int x){
+;   switch(x) {
+;     default: return;
+;   }
+; }
+
+; Command:
+; clang -cc1 -triple spir -emit-llvm -o test/SPIRV/OpSwitchEmpty.ll OpSwitchEmpty.cl -disable-llvm-passes
+
+; RUN: llvm-as %s -o %t.bc
+; RUN: llvm-spirv %t.bc -spirv-text -o - | FileCheck %s  --check-prefix=CHECK-SPIRV
+; RUN: llvm-spirv %t.bc -o %t.spv
+; RUN: llvm-spirv -r %t.spv -o - | llvm-dis -o - | FileCheck %s --check-prefix=CHECK-LLVM
+
+; CHECK-SPIRV: FunctionParameter {{[0-9]+}} [[X:[0-9]+]]
+; CHECK-SPIRV: Switch [[X]] [[DEFAULT:[0-9]+]] {{$}}
+; CHECK-SPIRV: Label [[DEFAULT]]
+
+; ModuleID = 'test/SPIRV/OpSwitchEmpty.ll'
+target datalayout = "e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024"
+target triple = "spir"
+
+; Function Attrs: nounwind
+define spir_func void @kk(i32 %x) #0 {
+entry:
+  switch i32 %x, label %sw.default [
+  ]
+; CHECK-LLVM: switch i32 %x, label %sw.default [
+; CHECK-LLVM-NEXT ]
+
+sw.default:                                       ; preds = %entry
+  ret void
+}
+
+attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
+
+!llvm.module.flags = !{!0}
+!opencl.enable.FP_CONTRACT = !{}
+!opencl.ocl.version = !{!1}
+!opencl.spir.version = !{!2}
+!opencl.used.extensions = !{!3}
+!opencl.used.optional.core.features = !{!3}
+!opencl.compiler.options = !{!3}
+
+!0 = !{i32 1, !"wchar_size", i32 4}
+!1 = !{i32 1, i32 0}
+!2 = !{i32 1, i32 2}
+!3 = !{}
-- 
1.8.3.1

