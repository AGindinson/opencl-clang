diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/include/clang/AST/ASTContext.h b/include/clang/AST/ASTContext.h
--- a/include/clang/AST/ASTContext.h	2017-10-17 14:24:50.080324627 +0300
+++ b/include/clang/AST/ASTContext.h	2017-10-17 20:28:17.921410723 +0300
@@ -468,6 +468,8 @@
   ///  this ASTContext object.
   LangOptions &LangOpts;
 
+  bool disabledFPContract;
+
   /// \brief Blacklist object that is used by sanitizers to decide which
   /// entities should not be instrumented.
   std::unique_ptr<SanitizerBlacklist> SanitizerBL;
@@ -654,6 +656,10 @@
     return *SanitizerBL;
   }
 
+  void disableFPContract() { disabledFPContract = true; }
+
+  bool isFPContractDisabled() const { return disabledFPContract; }
+
   DiagnosticsEngine &getDiagnostics() const;
 
   FullSourceLoc getFullLoc(SourceLocation Loc) const {
diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/lib/AST/ASTContext.cpp b/lib/AST/ASTContext.cpp
--- a/lib/AST/ASTContext.cpp	2017-10-17 14:27:53.568333765 +0300
+++ b/lib/AST/ASTContext.cpp	2017-10-17 20:28:17.929410724 +0300
@@ -747,6 +747,7 @@
       cudaConfigureCallDecl(nullptr), FirstLocalImport(), LastLocalImport(),
       ExternCContext(nullptr), MakeIntegerSeqDecl(nullptr),
       TypePackElementDecl(nullptr), SourceMgr(SM), LangOpts(LOpts),
+      disabledFPContract(false),
       SanitizerBL(new SanitizerBlacklist(LangOpts.SanitizerBlacklistFiles, SM)),
       AddrSpaceMap(nullptr), Target(nullptr), AuxTarget(nullptr),
       PrintingPolicy(LOpts), Idents(idents), Selectors(sels),
diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/lib/CodeGen/CodeGenModule.cpp b/lib/CodeGen/CodeGenModule.cpp
--- a/lib/CodeGen/CodeGenModule.cpp	2017-10-17 20:19:45.069385182 +0300
+++ b/lib/CodeGen/CodeGenModule.cpp	2017-10-17 20:28:17.929410724 +0300
@@ -481,6 +481,10 @@
 
   // Emit OpenCL specific module metadata: OpenCL/SPIR version.
   if (LangOpts.OpenCL) {
+    if (!getContext().isFPContractDisabled() &&
+        getCodeGenOpts().getFPContractMode() != CodeGenOptions::FPC_Off)
+      getModule().getOrInsertNamedMetadata("opencl.enable.FP_CONTRACT");
+
     EmitOpenCLMetadata();
     // Emit SPIR version.
     if (getTriple().getArch() == llvm::Triple::spir ||
diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/lib/Sema/SemaAttr.cpp b/lib/Sema/SemaAttr.cpp
--- a/lib/Sema/SemaAttr.cpp	2017-10-17 14:06:40.264270351 +0300
+++ b/lib/Sema/SemaAttr.cpp	2017-10-17 20:28:17.929410724 +0300
@@ -454,6 +454,7 @@
     break;
   case tok::OOS_OFF:
     FPFeatures.fp_contract = 0; 
+    Context.disableFPContract();
     break;
   case tok::OOS_DEFAULT:
     FPFeatures.fp_contract = getLangOpts().DefaultFPContract;
diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/test/CodeGenOpenCL/fp-contract.cl b/test/CodeGenOpenCL/fp-contract.cl
--- a/test/CodeGenOpenCL/fp-contract.cl	1970-01-01 03:00:00.000000000 +0300
+++ b/test/CodeGenOpenCL/fp-contract.cl	2017-10-17 20:28:17.929410724 +0300
@@ -0,0 +1,17 @@
+// RUN: %clang_cc1 %s -emit-llvm -o - -triple spir-unknown-unknown -ffp-contract=off  | FileCheck -check-prefix=FP_DISABLED %s
+// RUN: %clang_cc1 %s -emit-llvm -o - -triple spir-unknown-unknown -ffp-contract=on   | FileCheck -check-prefix=FP_ENABLED  %s
+// RUN: %clang_cc1 %s -emit-llvm -o - -triple spir-unknown-unknown -ffp-contract=fast | FileCheck -check-prefix=FP_ENABLED  %s
+// RUN: %clang_cc1 %s -emit-llvm -o - -triple spir-unknown-unknown -ffp-contract=fast -D DISABLE_FP_CONTRACT | FileCheck -check-prefix=FP_DISABLED  %s
+
+#ifdef DISABLE_FP_CONTRACT
+#pragma OPENCL FP_CONTRACT OFF
+#endif// DISABLE_FP_CONTRACT
+
+kernel void t() {}
+
+#ifdef DISABLE_FP_CONTRACT
+#pragma OPENCL FP_CONTRACT ON
+#endif// DISABLE_FP_CONTRACT
+
+// FP_DISABLED-NOT: opencl.enable.FP_CONTRACT
+// FP_ENABLED: opencl.enable.FP_CONTRACT
