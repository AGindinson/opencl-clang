diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/lib/Sema/SemaInit.cpp b/lib/Sema/SemaInit.cpp
--- a/lib/Sema/SemaInit.cpp	2017-10-17 14:06:40.308270353 +0300
+++ b/lib/Sema/SemaInit.cpp	2017-10-17 15:31:12.308522954 +0300
@@ -7161,7 +7161,7 @@
       QualType SourceType = Init->getType();
       // Case 1
       if (Entity.isParameterKind()) {
-        if (!SourceType->isSamplerT()) {
+        if (!SourceType->isSamplerT() && !SourceType->isIntegerType()) {
           S.Diag(Kind.getLocation(), diag::err_sampler_argument_required)
             << SourceType;
           break;
diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/test/CodeGenOpenCL/sampler.cl b/test/CodeGenOpenCL/sampler.cl
--- a/test/CodeGenOpenCL/sampler.cl	2017-10-17 14:06:40.324270354 +0300
+++ b/test/CodeGenOpenCL/sampler.cl	2017-10-17 15:31:12.308522954 +0300
@@ -54,4 +54,8 @@
   fnc4smp(smp_par);
   // CHECK: [[SAMP:%[0-9]+]] = load %opencl.sampler_t addrspace(2)*, %opencl.sampler_t addrspace(2)** [[smp_par_ptr]]
   // CHECK: call spir_func void @fnc4smp(%opencl.sampler_t addrspace(2)* [[SAMP]])
+
+  fnc4smp(5);
+  // CHECK: [[SAMP:%[0-9]+]] = call %opencl.sampler_t addrspace(2)* @__translate_sampler_initializer(i32 5)
+  // CHECK: call spir_func void @fnc4smp(%opencl.sampler_t addrspace(2)* [[SAMP]])
 }
diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/test/SemaOpenCL/sampler_t.cl b/test/SemaOpenCL/sampler_t.cl
--- a/test/SemaOpenCL/sampler_t.cl	2017-10-17 14:06:40.328270354 +0300
+++ b/test/SemaOpenCL/sampler_t.cl	2017-10-17 15:31:12.308522954 +0300
@@ -30,7 +30,7 @@
 
 constant sampler_t glb_smp9 = 0x100000000LL; // expected-error{{sampler_t initialization requires 32-bit integer, not 'long long'}}
 
-void foo(sampler_t);
+void foo(sampler_t); // expected-note{{passing argument to parameter here}}
 
 constant struct sampler_s {
   sampler_t smp; // expected-error{{the 'sampler_t' type cannot be used to declare a structure or union field}}
@@ -65,7 +65,8 @@
   foo(const_smp5);
   foo(const_smp6);
   foo(argsmp);
-  foo(5); // expected-error{{sampler_t variable required - got 'int'}}
+  foo(5);
+  foo(5.0f); // expected-error {{passing 'float' to parameter of incompatible type 'sampler_t'}}
   sampler_t sa[] = {argsmp, const_smp}; // expected-error {{array of 'sampler_t' type is invalid in OpenCL}}
   foo(sa[0]);
   foo(bad());
