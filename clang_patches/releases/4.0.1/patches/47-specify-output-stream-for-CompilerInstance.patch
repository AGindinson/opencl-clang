diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/include/clang/Frontend/CompilerInstance.h b/include/clang/Frontend/CompilerInstance.h
--- a/include/clang/Frontend/CompilerInstance.h	2017-10-17 14:06:40.188270347 +0300
+++ b/include/clang/Frontend/CompilerInstance.h	2017-10-17 20:22:47.737394279 +0300
@@ -172,6 +172,9 @@
   /// The list of active output files.
   std::list<OutputFile> OutputFiles;
 
+  // Force this output buffer
+  std::unique_ptr<llvm::raw_pwrite_stream> OutputStream;
+
   CompilerInstance(const CompilerInstance &) = delete;
   void operator=(const CompilerInstance &) = delete;
 public:
@@ -758,6 +761,16 @@
 
   /// }
 
+  void SetOutputStream(std::unique_ptr<llvm::raw_pwrite_stream> OutStream)
+  {
+    OutputStream = std::move(OutStream);
+  }
+
+  std::unique_ptr<llvm::raw_pwrite_stream> GetOutputStream()
+  {
+    return std::move(OutputStream);
+  }
+
   // Create module manager.
   void createModuleManager();
 
diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/lib/CodeGen/CodeGenAction.cpp b/lib/CodeGen/CodeGenAction.cpp
--- a/lib/CodeGen/CodeGenAction.cpp	2017-10-17 14:06:40.244270350 +0300
+++ b/lib/CodeGen/CodeGenAction.cpp	2017-10-17 20:22:47.737394279 +0300
@@ -769,9 +769,9 @@
 std::unique_ptr<ASTConsumer>
 CodeGenAction::CreateASTConsumer(CompilerInstance &CI, StringRef InFile) {
   BackendAction BA = static_cast<BackendAction>(Act);
-  std::unique_ptr<raw_pwrite_stream> OS = GetOutputStream(CI, InFile, BA);
-  if (BA != Backend_EmitNothing && !OS)
-    return nullptr;
+  std::unique_ptr<raw_pwrite_stream> OS = CI.GetOutputStream();
+  if (!OS)
+    OS = GetOutputStream(CI, InFile, BA);
 
   // Load bitcode modules to link with, if we need to.
   if (LinkModules.empty())
diff -Naur --strip-trailing-cr -x cclang -x .git -x .gitignore a/lib/Frontend/CompilerInstance.cpp b/lib/Frontend/CompilerInstance.cpp
--- a/lib/Frontend/CompilerInstance.cpp	2017-10-17 14:06:40.256270351 +0300
+++ b/lib/Frontend/CompilerInstance.cpp	2017-10-17 20:22:47.741394279 +0300
@@ -60,7 +60,7 @@
       ModuleManager(nullptr),
       ThePCHContainerOperations(std::move(PCHContainerOps)),
       BuildGlobalModuleIndex(false), HaveFullGlobalModuleIndex(false),
-      ModuleBuildFailed(false) {}
+      ModuleBuildFailed(false), OutputStream(nullptr) {}
 
 CompilerInstance::~CompilerInstance() {
   assert(OutputFiles.empty() && "Still output files in flight?");
